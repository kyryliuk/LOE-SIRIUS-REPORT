<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:TestPostgreInWpf"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:Microsoft_Windows_Tremes="microsoft.w"
                    
                    xmlns:themes="clr-namespace:Xceed.Wpf.Toolkit.Themes"
                    xmlns:chrome="clr-namespace:Xceed.Wpf.Toolkit.Chromes"
                    xmlns:conv="clr-namespace:Xceed.Wpf.Toolkit.Core.Converters"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit" xmlns:Themes="clr-namespace:Xceed.Wpf.Toolkit.Themes;assembly=Xceed.Wpf.Toolkit"
    mc:Ignorable="d">

    <Color x:Key="Fill_active_top">#FF8FC1E5</Color>
    <Brush x:Key="Fill_active_top_">#FF8FC1E5</Brush>
    <Color x:Key="Fill_active_bottom">#FF6bacdd</Color>
    <Color x:Key="Fill_active_bottom_dark">#FF5699cc</Color>
    <Color x:Key="Stroke_active_top">#FF5cace8</Color>
    <Color x:Key="Stroke_active_bottom">#FF3c95d7</Color>
    <Color x:Key="Stroke_active_light">#FFb3d4ec</Color>

    <Color x:Key="Fill_orange_normal_top">#FFf2b50e</Color>
    <Color x:Key="Fill_orange_normal_bottom">#FFefa307</Color>
    <Color x:Key="Fill_orange_over_bottom">#FFe09707</Color>
    <Color x:Key="Stroke_orange_top">#FFf0a808</Color>
    <Color x:Key="Stroke_orange_bottom">#FFd38d03</Color>
    <Color x:Key="Stroke_orange_light">#FFffd566</Color>

    <Color x:Key="Fill_normal_top">#FFF9F9F9</Color>
    <Color x:Key="Fill_normal_bottom">#FFE9E9E9</Color>
    <Color x:Key="BorderStroke_top">#FFCACACA</Color>
    <Color x:Key="BorderStroke_bottom">#FFAFAFAF</Color>
    <Color x:Key="Fill_over_top">#FFDBDBDB</Color>
    <Color x:Key="Fill_over_bottom">#FFF6F6F6</Color>
    <Color x:Key="Fill_pressed_light">#FF6D6D6D</Color>
    <Color x:Key="Fill_pressed_dark">#FF545454</Color>
    <Brush x:Key="Fill_pressed_light_">#FF6D6D6D</Brush>
    <Brush x:Key="Fill_pressed_dark_">#FF545454</Brush>

    <Brush x:Key="Shadow_first_color">#19000000</Brush>
    <Brush x:Key="Shadow_second_color">#0C000000</Brush>

    <Color x:Key="CheckBox_main_color">#FFd7d7d7</Color>
    <Brush x:Key="CheckBox_main_color_">#FFd7d7d7</Brush>
    <Color x:Key="CheckBox_stroke_color">#FFEA8E20</Color>
    <Brush x:Key="CheckBox_stroke_color_">#FFbababa</Brush>
    <Color x:Key="CheckBox_fill_top">#FFFAA11A</Color>
    <Color x:Key="CheckBox_fill_bottom">#FF9DBE32</Color>
    <Brush x:Key="CheckBox_fill_bottom_">#FF9DBE32</Brush>

    <Color x:Key="TextBox_fill">#FFeeeeee</Color>
    <Brush x:Key="TextBox_fill_">#FFeeeeee</Brush>

    <Color x:Key="Text_dark">#FF515151</Color>
    <Brush x:Key="Text_dark_">#FF515151</Brush>
    <Brush x:Key="Text_light_">#FFFFFFFF</Brush>
    <Brush x:Key="Text_disabled_">#80000000</Brush>

    <Style TargetType="{x:Type Button}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="Height" Value="36" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0"/>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ColorAnimation Duration="0" To="{StaticResource Fill_pressed_light}" Storyboard.TargetProperty="Fill.GradientStops[1].Color" Storyboard.TargetName="rectangle" d:IsOptimized="True"/>
                                        <ColorAnimation Duration="0" To="{StaticResource Fill_pressed_dark}" Storyboard.TargetProperty="Fill.GradientStops[0].Color" Storyboard.TargetName="rectangle" d:IsOptimized="True"/>
                                        <DoubleAnimation Duration="0" To="0.239" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Offset)" Storyboard.TargetName="rectangle" d:IsOptimized="True"/>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke)" Storyboard.TargetName="rectangle">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Null}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ColorAnimation Duration="0" To="White" Storyboard.TargetProperty="(TextBlock.Foreground).Color" Storyboard.TargetName="textBlock" d:IsOptimized="True"/>
                                        <ColorAnimation Duration="0" To="#FF414141" Storyboard.TargetProperty="(TextBlock.Foreground).Color" Storyboard.TargetName="textBlock1" d:IsOptimized="True"/>

                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ColorAnimation Duration="0" To="{StaticResource Fill_normal_top}" Storyboard.TargetProperty="Fill.GradientStops[0].Color" Storyboard.TargetName="rectangle" d:IsOptimized="True"/>
                                        <ColorAnimation Duration="0" To="{StaticResource Fill_normal_bottom}" Storyboard.TargetProperty="Fill.GradientStops[1].Color" Storyboard.TargetName="rectangle" d:IsOptimized="True"/>
                                        <ColorAnimation Duration="0" To="#5B717171" Storyboard.TargetProperty="(TextBlock.Foreground).Color" Storyboard.TargetName="textBlock" d:IsOptimized="True"/>
                                        <ColorAnimation Duration="0" To="#AFFFFFFF" Storyboard.TargetProperty="(TextBlock.Foreground).Color" Storyboard.TargetName="textBlock1" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="PointerOver">
                                    <Storyboard>
                                        <ColorAnimation Duration="0" To="{StaticResource Fill_over_top}" Storyboard.TargetProperty="Fill.GradientStops[1].Color" Storyboard.TargetName="rectangle" d:IsOptimized="True"/>
                                        <ColorAnimation Duration="0" To="{StaticResource Fill_over_bottom}" Storyboard.TargetProperty="Fill.GradientStops[0].Color" Storyboard.TargetName="rectangle" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <ColorAnimation Duration="0" To="{StaticResource Fill_normal_top}" Storyboard.TargetProperty="Fill.GradientStops[0].Color" Storyboard.TargetName="rectangle" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimation Duration="0" To="{StaticResource Fill_over_top}" Storyboard.TargetProperty="Fill.GradientStops[1].Color" Storyboard.TargetName="rectangle" d:IsOptimized="True"/>
                                        <ColorAnimation Duration="0" To="{StaticResource Fill_over_bottom}" Storyboard.TargetProperty="Fill.GradientStops[0].Color" Storyboard.TargetName="rectangle" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused"/>
                                <VisualState x:Name="PointerFocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle RadiusY="5" RadiusX="5" Fill="{StaticResource Shadow_second_color}" Margin="0,1,0,-1" d:IsHidden="True"/>
                        <Rectangle RadiusY="4" RadiusX="4" Fill="{StaticResource Shadow_first_color}" Margin="1,0"/>
                        <Rectangle x:Name="rectangle" RadiusY="2" RadiusX="2" Margin="1,0,1,1">
                            <Rectangle.Fill>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="{StaticResource Fill_normal_top}"/>
                                    <GradientStop Color="{StaticResource Fill_normal_bottom}" Offset="1"/>
                                </LinearGradientBrush>
                            </Rectangle.Fill>
                            <Rectangle.Stroke>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="{StaticResource BorderStroke_top}"/>
                                    <GradientStop Color="{StaticResource BorderStroke_bottom}" Offset="1"/>
                                </LinearGradientBrush>
                            </Rectangle.Stroke>
                        </Rectangle>


                        <TextBlock HorizontalAlignment="Stretch"
							VerticalAlignment="Center" x:Name="textBlock1" Margin="0,0.5,0,-1" TextWrapping="Wrap" Text="{TemplateBinding Content}" TextAlignment="Center" Foreground="White" FontSize="{TemplateBinding FontSize}" FontFamily="{TemplateBinding FontFamily}" FontWeight="{TemplateBinding FontWeight}" FontStyle="{TemplateBinding FontStyle}"/>
                        <TextBlock HorizontalAlignment="Stretch"
							VerticalAlignment="Center" x:Name="textBlock" Margin="0" TextWrapping="Wrap" Text="{TemplateBinding Content}" TextAlignment="Center" Foreground="{StaticResource Text_dark_}" FontSize="{TemplateBinding FontSize}" FontFamily="{TemplateBinding FontFamily}" FontWeight="{TemplateBinding FontWeight}" FontStyle="{TemplateBinding FontStyle}" Padding="{TemplateBinding Padding}"/>
                        <ContentPresenter x:Name="ContentPresnt" TextElement.Foreground="Transparent" TextBlock.Foreground="Transparent" HorizontalAlignment="Center" VerticalAlignment="Center" RecognizesAccessKey="True" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ButtonGreen" TargetType="{x:Type Button}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0"/>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ColorAnimation Duration="0" To="{StaticResource Fill_pressed_light}" Storyboard.TargetProperty="Fill.GradientStops[1].Color" Storyboard.TargetName="rectangle" d:IsOptimized="True"/>
                                        <ColorAnimation Duration="0" To="{StaticResource Fill_pressed_dark}" Storyboard.TargetProperty="Fill.GradientStops[0].Color" Storyboard.TargetName="rectangle" d:IsOptimized="True"/>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke)" Storyboard.TargetName="rectangle">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Null}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ColorAnimation Duration="0" To="White" Storyboard.TargetProperty="(TextBlock.Foreground).Color" Storyboard.TargetName="textBlock" d:IsOptimized="True"/>
                                        <ColorAnimation Duration="0" To="#FF414141" Storyboard.TargetProperty="(TextBlock.Foreground).Color" Storyboard.TargetName="textBlock1" d:IsOptimized="True"/>
                                        <ColorAnimation Duration="0" To="Transparent" Storyboard.TargetProperty="(Shape.Stroke).Color" Storyboard.TargetName="path" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ColorAnimation Duration="0" To="{StaticResource Fill_normal_top}" Storyboard.TargetProperty="Fill.GradientStops[0].Color" Storyboard.TargetName="rectangle" d:IsOptimized="True"/>
                                        <ColorAnimation Duration="0" To="{StaticResource Fill_normal_bottom}" Storyboard.TargetProperty="Fill.GradientStops[1].Color" Storyboard.TargetName="rectangle" d:IsOptimized="True"/>
                                        <ColorAnimation Duration="0" To="Transparent" Storyboard.TargetProperty="(Shape.Fill).Color" Storyboard.TargetName="path" d:IsOptimized="True"/>
                                        <ColorAnimation Duration="0" To="Transparent" Storyboard.TargetProperty="(Shape.Stroke).Color" Storyboard.TargetName="path" d:IsOptimized="True"/>
                                        <ColorAnimation Duration="0" To="#5B717171" Storyboard.TargetProperty="(TextBlock.Foreground).Color" Storyboard.TargetName="textBlock" d:IsOptimized="True"/>
                                        <ColorAnimation Duration="0" To="#AFFFFFFF" Storyboard.TargetProperty="(TextBlock.Foreground).Color" Storyboard.TargetName="textBlock1" d:IsOptimized="True"/>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke)" Storyboard.TargetName="rectangle">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                        <GradientStop Color="{StaticResource BorderStroke_top}"/>
                                                        <GradientStop Color="{StaticResource BorderStroke_bottom}" Offset="1"/>
                                                    </LinearGradientBrush>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimation Duration="0" To="#FF85A420" Storyboard.TargetProperty="Fill.GradientStops[1].Color" Storyboard.TargetName="rectangle" d:IsOptimized="True"/>
                                        <ColorAnimation Duration="0" To="#FFB6D846" Storyboard.TargetProperty="Fill.GradientStops[0].Color" Storyboard.TargetName="rectangle" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <ColorAnimation Duration="0" To="#FFB6D846" Storyboard.TargetProperty="Fill.GradientStops[0].Color" Storyboard.TargetName="rectangle" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused"/>
                                <VisualState x:Name="PointerFocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle RadiusY="5" RadiusX="5" Fill="{StaticResource Shadow_second_color}" Margin="0,1,0,-1"/>
                        <Rectangle RadiusY="4" RadiusX="4" Fill="{StaticResource Shadow_first_color}"/>
                        <Rectangle x:Name="rectangle" RadiusY="2" RadiusX="2" Margin="1,0,1,1">
                            <Rectangle.Fill>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#FFB6D846"/>
                                    <GradientStop Color="#FF93B329" Offset="1"/>
                                </LinearGradientBrush>
                            </Rectangle.Fill>
                            <Rectangle.Stroke>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#FF62A921"/>
                                    <GradientStop Color="#FF529C25" Offset="0.999"/>
                                </LinearGradientBrush>
                            </Rectangle.Stroke>
                        </Rectangle>
                        <Path x:Name="path" Data="M2.75,4.66667 L121.083,4.66667" Fill="White" Margin="2.5,1.334,2.5,0" Stretch="Fill" Stroke="#FFD9FA73" UseLayoutRounding="False" Height="1" VerticalAlignment="Top"/>
                        <TextBlock HorizontalAlignment="Stretch"
							VerticalAlignment="Center" x:Name="textBlock1" Margin="0,1.5,0,-1.5" TextWrapping="Wrap" Text="{TemplateBinding Content}" TextAlignment="Center" Foreground="#39000000" FontSize="{TemplateBinding FontSize}" FontFamily="{TemplateBinding FontFamily}" FontWeight="{TemplateBinding FontWeight}" FontStyle="{TemplateBinding FontStyle}"/>
                        <TextBlock HorizontalAlignment="Stretch"
							VerticalAlignment="Center" x:Name="textBlock" Margin="0" TextWrapping="Wrap" Text="{TemplateBinding Content}" TextAlignment="Center" Foreground="White" FontSize="{TemplateBinding FontSize}" FontFamily="{TemplateBinding FontFamily}" FontWeight="{TemplateBinding FontWeight}" FontStyle="{TemplateBinding FontStyle}"/>
                        <ContentPresenter TextElement.Foreground="Transparent" HorizontalAlignment="Center" VerticalAlignment="Center" RecognizesAccessKey="True" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ButtonBlue" TargetType="{x:Type Button}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0"/>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ColorAnimation Duration="0" To="{StaticResource Fill_pressed_light}" Storyboard.TargetProperty="Fill.GradientStops[1].Color" Storyboard.TargetName="rectangle" d:IsOptimized="True"/>
                                        <ColorAnimation Duration="0" To="{StaticResource Fill_pressed_dark}" Storyboard.TargetProperty="Fill.GradientStops[0].Color" Storyboard.TargetName="rectangle" d:IsOptimized="True"/>
                                        <ColorAnimation Duration="0" To="White" Storyboard.TargetProperty="(TextBlock.Foreground).Color" Storyboard.TargetName="textBlock" d:IsOptimized="True"/>
                                        <ColorAnimation Duration="0" To="#FF414141" Storyboard.TargetProperty="(TextBlock.Foreground).Color" Storyboard.TargetName="textBlock1" d:IsOptimized="True"/>
                                        <ColorAnimation Duration="0" To="Transparent" Storyboard.TargetProperty="(Shape.Stroke).Color" Storyboard.TargetName="path" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ColorAnimation Duration="0" To="{StaticResource Fill_normal_top}" Storyboard.TargetProperty="Fill.GradientStops[0].Color" Storyboard.TargetName="rectangle" d:IsOptimized="True"/>
                                        <ColorAnimation Duration="0" To="{StaticResource Fill_normal_bottom}" Storyboard.TargetProperty="Fill.GradientStops[1].Color" Storyboard.TargetName="rectangle" d:IsOptimized="True"/>
                                        <ColorAnimation Duration="0" To="Transparent" Storyboard.TargetProperty="(Shape.Fill).Color" Storyboard.TargetName="path" d:IsOptimized="True"/>
                                        <ColorAnimation Duration="0" To="Transparent" Storyboard.TargetProperty="(Shape.Stroke).Color" Storyboard.TargetName="path" d:IsOptimized="True"/>
                                        <ColorAnimation Duration="0" To="#5B717171" Storyboard.TargetProperty="(TextBlock.Foreground).Color" Storyboard.TargetName="textBlock" d:IsOptimized="True"/>
                                        <ColorAnimation Duration="0" To="#AFFFFFFF" Storyboard.TargetProperty="(TextBlock.Foreground).Color" Storyboard.TargetName="textBlock1" d:IsOptimized="True"/>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke)" Storyboard.TargetName="rectangle">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                        <GradientStop Color="{StaticResource BorderStroke_top}"/>
                                                        <GradientStop Color="{StaticResource BorderStroke_bottom}" Offset="1"/>
                                                    </LinearGradientBrush>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimation Duration="0" To="{StaticResource Fill_active_bottom_dark}" Storyboard.TargetProperty="Fill.GradientStops[1].Color" Storyboard.TargetName="rectangle" d:IsOptimized="True"/>
                                        <ColorAnimation Duration="0" To="{StaticResource Fill_active_top}" Storyboard.TargetProperty="Fill.GradientStops[0].Color" Storyboard.TargetName="rectangle" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <ColorAnimation Duration="0" To="{StaticResource Fill_active_top}" Storyboard.TargetProperty="Fill.GradientStops[0].Color" Storyboard.TargetName="rectangle" d:IsOptimized="True"/>
                                        <ColorAnimation Duration="0" To="{StaticResource Fill_active_bottom}" Storyboard.TargetProperty="Fill.GradientStops[1].Color" Storyboard.TargetName="rectangle" d:IsOptimized="True"/>
                                        <ColorAnimation Duration="0" To="White" Storyboard.TargetProperty="(TextBlock.Foreground).Color" Storyboard.TargetName="textBlock" d:IsOptimized="True"/>
                                        <ColorAnimation Duration="0" To="#3B000000" Storyboard.TargetProperty="(TextBlock.Foreground).Color" Storyboard.TargetName="textBlock1" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused"/>
                                <VisualState x:Name="PointerFocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle RadiusY="5" RadiusX="5" Fill="{StaticResource Shadow_second_color}" Margin="0,1,0,-1"/>
                        <Rectangle RadiusY="4" RadiusX="4" Fill="{StaticResource Shadow_first_color}"/>
                        <Rectangle x:Name="rectangle" RadiusY="2" RadiusX="2" Margin="1,0,1,1">
                            <Rectangle.Fill>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="{StaticResource Fill_active_top}"/>
                                    <GradientStop Color="{StaticResource Fill_active_bottom}" Offset="1"/>
                                </LinearGradientBrush>
                            </Rectangle.Fill>
                            <Rectangle.Stroke>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="{StaticResource Stroke_active_top}" Offset="0.015"/>
                                    <GradientStop Color="{StaticResource Stroke_active_bottom}" Offset="1"/>
                                </LinearGradientBrush>
                            </Rectangle.Stroke>
                        </Rectangle>
                        <Path x:Name="path" Data="M2.75,4.66667 L121.083,4.66667" Fill="White" Margin="2.5,1.334,2.5,0" Stretch="Fill" UseLayoutRounding="False" Height="1" VerticalAlignment="Top">
                            <Path.Stroke>
                                <SolidColorBrush Color="{StaticResource Stroke_active_light}"/>
                            </Path.Stroke>
                        </Path>
                        <TextBlock HorizontalAlignment="Stretch"
							VerticalAlignment="Center" x:Name="textBlock1" Margin="0,1.5,0,-1.5" TextWrapping="Wrap" Text="{TemplateBinding Content}" TextAlignment="Center" Foreground="#39000000" FontSize="{TemplateBinding FontSize}" FontFamily="{TemplateBinding FontFamily}" FontWeight="{TemplateBinding FontWeight}" FontStyle="{TemplateBinding FontStyle}" RenderTransformOrigin="0.5,0.5"/>
                        <TextBlock HorizontalAlignment="Stretch"
							VerticalAlignment="Center" x:Name="textBlock" Margin="0" TextWrapping="Wrap" Text="{TemplateBinding Content}" TextAlignment="Center" Foreground="White" FontSize="{TemplateBinding FontSize}" FontFamily="{TemplateBinding FontFamily}" FontWeight="{TemplateBinding FontWeight}" FontStyle="{TemplateBinding FontStyle}"/>
                        <ContentPresenter TextElement.Foreground="Transparent" HorizontalAlignment="Center" VerticalAlignment="Center" RecognizesAccessKey="True" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ButtonOrange" TargetType="{x:Type Button}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0"/>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ColorAnimation Duration="0" To="{StaticResource Fill_pressed_light}" Storyboard.TargetProperty="Fill.GradientStops[1].Color" Storyboard.TargetName="rectangle" d:IsOptimized="True"/>
                                        <ColorAnimation Duration="0" To="{StaticResource Fill_pressed_dark}" Storyboard.TargetProperty="Fill.GradientStops[0].Color" Storyboard.TargetName="rectangle" d:IsOptimized="True"/>
                                        <DoubleAnimation Duration="0" To="0.239" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Offset)" Storyboard.TargetName="rectangle" d:IsOptimized="True"/>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke)" Storyboard.TargetName="rectangle">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Null}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ColorAnimation Duration="0" To="White" Storyboard.TargetProperty="(TextBlock.Foreground).Color" Storyboard.TargetName="textBlock" d:IsOptimized="True"/>
                                        <ColorAnimation Duration="0" To="#FF414141" Storyboard.TargetProperty="(TextBlock.Foreground).Color" Storyboard.TargetName="textBlock1" d:IsOptimized="True"/>
                                        <ColorAnimation Duration="0" To="Transparent" Storyboard.TargetProperty="(Shape.Stroke).Color" Storyboard.TargetName="path" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ColorAnimation Duration="0" To="{StaticResource Fill_normal_top}" Storyboard.TargetProperty="Fill.GradientStops[0].Color" Storyboard.TargetName="rectangle" d:IsOptimized="True"/>
                                        <ColorAnimation Duration="0" To="{StaticResource Fill_normal_bottom}" Storyboard.TargetProperty="Fill.GradientStops[1].Color" Storyboard.TargetName="rectangle" d:IsOptimized="True"/>
                                        <ColorAnimation Duration="0" To="Transparent" Storyboard.TargetProperty="(Shape.Fill).Color" Storyboard.TargetName="path" d:IsOptimized="True"/>
                                        <ColorAnimation Duration="0" To="Transparent" Storyboard.TargetProperty="(Shape.Stroke).Color" Storyboard.TargetName="path" d:IsOptimized="True"/>
                                        <ColorAnimation Duration="0" To="#5B717171" Storyboard.TargetProperty="(TextBlock.Foreground).Color" Storyboard.TargetName="textBlock" d:IsOptimized="True"/>
                                        <ColorAnimation Duration="0" To="#AFFFFFFF" Storyboard.TargetProperty="(TextBlock.Foreground).Color" Storyboard.TargetName="textBlock1" d:IsOptimized="True"/>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke)" Storyboard.TargetName="rectangle">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                        <GradientStop Color="{StaticResource BorderStroke_top}"/>
                                                        <GradientStop Color="{StaticResource BorderStroke_bottom}" Offset="1"/>
                                                    </LinearGradientBrush>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimation Duration="0" To="{StaticResource Fill_orange_over_bottom}" Storyboard.TargetProperty="Fill.GradientStops[1].Color" Storyboard.TargetName="rectangle" d:IsOptimized="True"/>
                                        <ColorAnimation Duration="0" To="{StaticResource Fill_orange_normal_top}" Storyboard.TargetProperty="Fill.GradientStops[0].Color" Storyboard.TargetName="rectangle" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <ColorAnimation Duration="0" To="{StaticResource Fill_orange_normal_top}" Storyboard.TargetProperty="Fill.GradientStops[0].Color" Storyboard.TargetName="rectangle" d:IsOptimized="True"/>
                                        <ColorAnimation Duration="0" To="{StaticResource Fill_orange_normal_bottom}" Storyboard.TargetProperty="Fill.GradientStops[1].Color" Storyboard.TargetName="rectangle" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused"/>
                                <VisualState x:Name="PointerFocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle RadiusY="5" RadiusX="5" Fill="{StaticResource Shadow_second_color}" Margin="0,1,0,-1"/>
                        <Rectangle RadiusY="4" RadiusX="4" Fill="{StaticResource Shadow_first_color}"/>
                        <Rectangle x:Name="rectangle" RadiusY="2" RadiusX="2" Margin="1,0,1,1">
                            <Rectangle.Fill>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="{StaticResource Fill_orange_normal_top}"/>
                                    <GradientStop Color="{StaticResource Fill_orange_normal_bottom}" Offset="1"/>
                                </LinearGradientBrush>
                            </Rectangle.Fill>
                            <Rectangle.Stroke>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="{StaticResource Stroke_orange_top}"/>
                                    <GradientStop Color="{StaticResource Stroke_orange_bottom}" Offset="1"/>
                                </LinearGradientBrush>
                            </Rectangle.Stroke>
                        </Rectangle>
                        <Path x:Name="path" Data="M2.75,4.66667 L121.083,4.66667" Fill="White" Margin="2.5,1.334,2.5,0" Stretch="Fill" UseLayoutRounding="False" Height="1" VerticalAlignment="Top">
                            <Path.Stroke>
                                <SolidColorBrush Color="{StaticResource Stroke_orange_light}"/>
                            </Path.Stroke>
                        </Path>
                        <TextBlock HorizontalAlignment="Stretch"
							VerticalAlignment="Center" x:Name="textBlock1" Margin="0,1.5,0,-1.5" TextWrapping="Wrap" Text="{TemplateBinding Content}" TextAlignment="Center" Foreground="#39000000" FontSize="{TemplateBinding FontSize}" FontFamily="{TemplateBinding FontFamily}" FontWeight="{TemplateBinding FontWeight}" FontStyle="{TemplateBinding FontStyle}"/>
                        <TextBlock HorizontalAlignment="Stretch"
							VerticalAlignment="Center" x:Name="textBlock" Margin="0" TextWrapping="Wrap" Text="{TemplateBinding Content}" TextAlignment="Center" Foreground="White" FontSize="{TemplateBinding FontSize}" FontFamily="{TemplateBinding FontFamily}" FontWeight="{TemplateBinding FontWeight}" FontStyle="{TemplateBinding FontStyle}"/>
                        <ContentPresenter TextElement.Foreground="Transparent" HorizontalAlignment="Center" VerticalAlignment="Center" RecognizesAccessKey="True" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CheckBoxSwitcher" TargetType="{x:Type CheckBox}">
        <Setter Property="Foreground" Value="#FF313131" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="37"/>
                            <ColumnDefinition Width="23*"/>
                        </Grid.ColumnDefinitions>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.2"/>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="PointerOver"/>
                                <VisualState x:Name="Pressed"/>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill)" Storyboard.TargetName="ellipse">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <SolidColorBrush Color="#FFD7D7D7"/>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="ellipse1">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="CheckedPointerOver"/>
                                <VisualState x:Name="CheckedPressed"/>
                                <VisualState x:Name="CheckedDisabled"/>
                                <VisualState x:Name="Indeterminate2"/>
                                <VisualState x:Name="IndeterminatePointerOver"/>
                                <VisualState x:Name="IndeterminatePressed"/>
                                <VisualState x:Name="IndeterminateDisabled"/>
                                <VisualState x:Name="Normal"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.2">
                                        <VisualTransition.GeneratedEasingFunction>
                                            <QuinticEase EasingMode="EaseOut"/>
                                        </VisualTransition.GeneratedEasingFunction>
                                    </VisualTransition>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="rectangle">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                        <GradientStop Color="{StaticResource Fill_active_bottom}" Offset="1"/>
                                                        <GradientStop Color="{StaticResource Fill_active_bottom}"/>
                                                    </LinearGradientBrush>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>

                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="rectangle1">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Thickness>0</Thickness>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="RenderTransform.Children[3].X" Storyboard.TargetName="ellipse2">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="16"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="RenderTransform.Children[3].X" Storyboard.TargetName="ellipse">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="18"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="RenderTransform.Children[3].X" Storyboard.TargetName="ellipse1">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="18"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked"/>
                                <VisualState x:Name="Indeterminate">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="RenderTransform.Children[3].X" Storyboard.TargetName="ellipse2">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="8"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="RenderTransform.Children[3].X" Storyboard.TargetName="ellipse">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="8"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="RenderTransform.Children[3].X" Storyboard.TargetName="ellipse1">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="8"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>

                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Unfocused"/>
                                <VisualState x:Name="PointerFocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle x:Name="rectangle1" HorizontalAlignment="Left" Width="35" VerticalAlignment="Center" Height="16" Margin="0,2,0,-1" RadiusY="8" RadiusX="8" Fill="White" RenderTransformOrigin="0.5,0.5"/>
                        <Rectangle x:Name="rectangle" HorizontalAlignment="Left" Width="35" VerticalAlignment="Center" Height="18" Margin="0" RadiusY="8" RadiusX="8">
                            <Rectangle.Stroke>
                                <SolidColorBrush Color="{StaticResource CheckBox_stroke_color}"/>
                            </Rectangle.Stroke>
                            <Rectangle.Fill>
                                <SolidColorBrush Color="{StaticResource CheckBox_main_color}"/>
                            </Rectangle.Fill>
                        </Rectangle>
                        <Ellipse x:Name="ellipse2" HorizontalAlignment="Left" Height="18" Margin="1,0,0,0" VerticalAlignment="Center" Width="18" Fill="#0E000000" RenderTransformOrigin="0.5,0.5">
                            <Ellipse.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform/>
                                    <SkewTransform/>
                                    <RotateTransform/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </Ellipse.RenderTransform>
                        </Ellipse>
                        <Ellipse x:Name="ellipse" HorizontalAlignment="Left" Height="18" Margin="0" VerticalAlignment="Center" Width="18" RenderTransformOrigin="0.5,0.5">
                            <Ellipse.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform/>
                                    <SkewTransform/>
                                    <RotateTransform/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </Ellipse.RenderTransform>
                            <Ellipse.Fill>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="{StaticResource CheckBox_fill_bottom}" Offset="1"/>
                                    <GradientStop Color="{StaticResource CheckBox_fill_top}"/>
                                </LinearGradientBrush>
                            </Ellipse.Fill>
                            <Ellipse.Stroke>
                                <SolidColorBrush Color="{StaticResource CheckBox_stroke_color}"/>
                            </Ellipse.Stroke>
                        </Ellipse>
                        <Ellipse x:Name="ellipse1" HorizontalAlignment="Left" Height="16" Margin="1,0,0,0" VerticalAlignment="Center" Width="16" RenderTransformOrigin="0.5,0.5">
                            <Ellipse.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform/>
                                    <SkewTransform/>
                                    <RotateTransform/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </Ellipse.RenderTransform>
                            <Ellipse.Stroke>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="White"/>
                                    <GradientStop Color="Transparent" Offset="0.5"/>
                                    <GradientStop Color="White" Offset="0.163"/>
                                </LinearGradientBrush>
                            </Ellipse.Stroke>
                        </Ellipse>
                        <TextBlock Grid.Column="1" HorizontalAlignment="Left" Margin="7,1,0,-1" TextWrapping="Wrap" Text="{TemplateBinding Content}" VerticalAlignment="Center" FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}" FontWeight="{TemplateBinding FontWeight}" FontStyle="{TemplateBinding FontStyle}" Foreground="{TemplateBinding Background}"/>
                        <TextBlock x:Name="textBlock" Grid.Column="1" Margin="7,0,0,0" TextWrapping="Wrap" Text="{TemplateBinding Content}" FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}" FontWeight="{TemplateBinding FontWeight}" FontStyle="{TemplateBinding FontStyle}" Foreground="{TemplateBinding Foreground}" ToolTipService.ToolTip="{TemplateBinding ToolTipService.ToolTip}" Panel.ZIndex="1" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="#80000000"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ProgressBar}">
        <Setter Property="Height" Value="20" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ProgressBar}">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.2">
                                        <VisualTransition.GeneratedEasingFunction>
                                            <ElasticEase/>
                                        </VisualTransition.GeneratedEasingFunction>
                                    </VisualTransition>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Determinate"/>
                                <VisualState x:Name="Updating"/>
                                <VisualState x:Name="Indeterminate">
                                    <Storyboard RepeatBehavior="Forever">
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="DeterminateRoot">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="border">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                            <DiscreteObjectKeyFrame KeyTime="0:0:1">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="RenderTransform.Children[3].X" Storyboard.TargetName="grid">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="-25"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:1" Value="25"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:2" Value="-25"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Error"/>
                                <VisualState x:Name="Paused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle RadiusY="8.5" RadiusX="8.5" Margin="0,1" Fill="White"/>
                        <Rectangle RadiusY="8.5" RadiusX="8.5" Margin="0,0,0,1">
                            <Rectangle.Stroke>
                                <SolidColorBrush Color="{StaticResource CheckBox_stroke_color}"/>
                            </Rectangle.Stroke>
                            <Rectangle.Fill>
                                <SolidColorBrush Color="{StaticResource CheckBox_main_color}"/>
                            </Rectangle.Fill>
                        </Rectangle>
                        <Path Data="M7.5,22.5312 L86.125,22.5312" Height="1" Margin="5,1,5,0" Stretch="Fill" UseLayoutRounding="False" VerticalAlignment="Top" Stroke="#0F000000"/>
                        <Path Data="M7.5,22.5312 L86.125,22.5312" Height="1" Margin="7,1,7,0" Stretch="Fill" UseLayoutRounding="False" VerticalAlignment="Bottom" Stroke="White"/>

                        <Border x:Name="DeterminateRoot" BorderThickness="{TemplateBinding BorderThickness}" Margin="0,0,0,1">
                            <Grid x:Name="PART_Track" HorizontalAlignment="Stretch" Margin="0.2,-0.8,-0.2,-0.4">
                                <Rectangle x:Name="PART_Indicator" RadiusY="8.5" RadiusX="8.5" Fill="#1F000000" Margin="0,0,0,-1" HorizontalAlignment="Left"  />
                                <Rectangle RadiusY="8.5" RadiusX="8.5" Width="{Binding ActualWidth, ElementName=PART_Indicator}" HorizontalAlignment="Left"  >
                                    <Rectangle.Stroke>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="{StaticResource Stroke_active_top}"/>
                                            <GradientStop Color="{StaticResource Stroke_active_bottom}" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Rectangle.Stroke>
                                    <Rectangle.Fill>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="{StaticResource Fill_active_bottom}" Offset="1"/>
                                            <GradientStop Color="{StaticResource Fill_active_top}"/>
                                        </LinearGradientBrush>
                                    </Rectangle.Fill>
                                </Rectangle>
                                <Rectangle RadiusY="8.5" RadiusX="8.5" Width="{Binding ActualWidth, ElementName=PART_Indicator}" HorizontalAlignment="Left" Fill="{x:Null}" Margin="0,1,0,0"  >
                                    <Rectangle.Stroke>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#93FFFFFF" Offset="0.009"/>
                                            <GradientStop Color="#009EC7E6" Offset="0.119"/>
                                        </LinearGradientBrush>
                                    </Rectangle.Stroke>
                                </Rectangle>
                                <Path  Width="{Binding ActualWidth, ElementName=PART_Indicator}" x:Name="path" Data="M7.5,22.5312 L86.125,22.5312" Height="1" Margin="0,1,0,0" Stretch="Fill" UseLayoutRounding="False" VerticalAlignment="Top" HorizontalAlignment="Left" RenderTransformOrigin="0.5,0.5" Visibility="Hidden">

                                    <Path.Stroke>
                                        <SolidColorBrush Color="{StaticResource Stroke_active_light}"/>
                                    </Path.Stroke>
                                </Path>
                            </Grid>
                        </Border>
                        <Border x:Name="border" Margin="25,0" RenderTransformOrigin="0.5,0.5" Visibility="Collapsed">
                            <Grid x:Name="grid" Margin="0" RenderTransformOrigin="0.5,0.5">
                                <Grid.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform/>
                                        <SkewTransform/>
                                        <RotateTransform/>
                                        <TranslateTransform/>
                                    </TransformGroup>
                                </Grid.RenderTransform>
                                <Rectangle RadiusY="8.5" RadiusX="8.5" Fill="#4C000000" Margin="0,0,0,0.5"/>
                                <Rectangle RadiusY="8.5" RadiusX="8.5" Margin="0,0,0,1" >
                                    <Rectangle.Stroke>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="{StaticResource BorderStroke_top}"/>
                                            <GradientStop Color="{StaticResource BorderStroke_bottom}" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Rectangle.Stroke>
                                    <Rectangle.Fill>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="{StaticResource CheckBox_fill_bottom}" Offset="1"/>
                                            <GradientStop Color="{StaticResource CheckBox_fill_top}"/>
                                        </LinearGradientBrush>
                                    </Rectangle.Fill>
                                </Rectangle>
                                <Path x:Name="path1" Data="M7.5,22.5312 L86.125,22.5312" Height="1" Stretch="Fill" UseLayoutRounding="False" VerticalAlignment="Top" Stroke="White" Margin="6,1,6,0"/>
                            </Grid>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type CheckBox}">
        <Setter Property="Foreground" Value="#FF313131" />
        <Setter Property="Height" Value="20" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="23"/>
                            <ColumnDefinition Width="23*"/>
                        </Grid.ColumnDefinitions>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.2"/>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="PointerOver"/>
                                <VisualState x:Name="Pressed"/>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="rectangle1">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="CheckedPointerOver"/>
                                <VisualState x:Name="CheckedPressed"/>
                                <VisualState x:Name="CheckedDisabled"/>
                                <VisualState x:Name="Indeterminate2"/>
                                <VisualState x:Name="IndeterminatePointerOver"/>
                                <VisualState x:Name="IndeterminatePressed"/>
                                <VisualState x:Name="IndeterminateDisabled"/>
                                <VisualState x:Name="Normal"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0"/>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="grid">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="path">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="rectangle">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="grid_Copy">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Rectangle.RadiusX)" Storyboard.TargetName="rectangle">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Rectangle.RadiusY)" Storyboard.TargetName="rectangle">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked"/>
                                <VisualState x:Name="Indeterminate">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="path1">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Unfocused"/>
                                <VisualState x:Name="PointerFocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <TextBlock Grid.Column="1" HorizontalAlignment="Left" Margin="7,1.5,0,-1.5" TextWrapping="Wrap" Text="{TemplateBinding Content}" VerticalAlignment="Center" FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}" FontWeight="{TemplateBinding FontWeight}" FontStyle="{TemplateBinding FontStyle}" Foreground="{TemplateBinding Background}"/>
                        <TextBlock Grid.Column="1" Margin="7,0,0,0" TextWrapping="Wrap" Text="{TemplateBinding Content}" FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}" FontWeight="{TemplateBinding FontWeight}" FontStyle="{TemplateBinding FontStyle}" Foreground="{TemplateBinding Foreground}" ToolTipService.ToolTip="{TemplateBinding ToolTipService.ToolTip}" Panel.ZIndex="1" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                        <Rectangle HorizontalAlignment="Center" Height="18" Margin="0,1,0,-1" RadiusY="2.375" RadiusX="2.375" VerticalAlignment="Center" Width="18" Fill="White"/>
                        <Rectangle HorizontalAlignment="Center" Height="18" Margin="0" RadiusY="1" RadiusX="1" VerticalAlignment="Center" Width="18">
                            <Rectangle.Stroke>
                                <SolidColorBrush Color="{StaticResource CheckBox_stroke_color}"/>
                            </Rectangle.Stroke>
                            <Rectangle.Fill>
                                <SolidColorBrush Color="{StaticResource CheckBox_main_color}"/>
                            </Rectangle.Fill>
                        </Rectangle>
                        <Path x:Name="path1" Data="M14.375,20 L23.375,20" HorizontalAlignment="Left" Height="2" Margin="13.375,19,0,0" Stretch="Fill" StrokeThickness="2" UseLayoutRounding="False" VerticalAlignment="Top" Width="11" Visibility="Collapsed">
                            <Path.Stroke>
                                <SolidColorBrush Color="{StaticResource Fill_pressed_light}"/>
                            </Path.Stroke>
                        </Path>
                        <Rectangle x:Name="rectangle" HorizontalAlignment="Center" Height="18" Margin="0" RadiusY="2.375" RadiusX="2.375" VerticalAlignment="Center" Width="18" Visibility="Collapsed">
                            <Rectangle.Stroke>
                                <SolidColorBrush Color="{StaticResource CheckBox_stroke_color}"/>
                            </Rectangle.Stroke>
                            <Rectangle.Fill>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="{StaticResource CheckBox_fill_top}"/>
                                    <GradientStop Color="{StaticResource CheckBox_fill_bottom}" Offset="1"/>
                                </LinearGradientBrush>
                            </Rectangle.Fill>
                        </Rectangle>
                        <Path x:Name="path" Data="M11.375,5.5 L27,5.5" HorizontalAlignment="Center" Height="1" Margin="0,-7,0,7" Stretch="Fill" UseLayoutRounding="False" VerticalAlignment="Center" Width="14" Visibility="Collapsed" Stroke="White"/>
                        <Grid x:Name="grid_Copy" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,2,0,0" Visibility="Collapsed">
                            <Path Data="M14.375,20.375 L18.7083,24.7083" HorizontalAlignment="Center" Height="6" Margin="-5,4,0,0" Stretch="Fill" UseLayoutRounding="False" VerticalAlignment="Center" Width="7" StrokeThickness="2" RenderTransformOrigin="0.5,0.5" Stroke="White"/>
                            <Path Data="M18.541,25.541 L25.5,18" HorizontalAlignment="Center" Height="10" Margin="5,0,0,0" Stretch="Fill" UseLayoutRounding="False" VerticalAlignment="Center" Width="9" StrokeThickness="1.5" Stroke="White"/>
                        </Grid>
                        <Grid x:Name="grid" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,1,0,0" Visibility="Collapsed">
                            <Path Data="M14.375,20.375 L18.7083,24.7083" HorizontalAlignment="Center" Height="6" Margin="-5,4,0,0" Stretch="Fill" UseLayoutRounding="False" VerticalAlignment="Center" Width="7" StrokeThickness="2" RenderTransformOrigin="0.5,0.5">
                                <Path.Stroke>
                                    <SolidColorBrush Color="{StaticResource Fill_pressed_light}"/>
                                </Path.Stroke>
                            </Path>
                            <Path Data="M18.541,25.541 L25.5,18" HorizontalAlignment="Center" Height="10" Margin="5,0,0,0" Stretch="Fill" UseLayoutRounding="False" VerticalAlignment="Center" Width="9" StrokeThickness="1.5">
                                <Path.Stroke>
                                    <SolidColorBrush Color="{StaticResource Fill_pressed_light}"/>
                                </Path.Stroke>
                            </Path>
                        </Grid>
                        <Rectangle x:Name="rectangle1" HorizontalAlignment="Center" Height="18" Margin="0" RadiusY="2.375" RadiusX="2.375" VerticalAlignment="Center" Width="18" Visibility="Collapsed" Fill="#35000000"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="#80000000"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <SolidColorBrush x:Key="WindowBackgroundBrush" Color="Transparent" />

    <SolidColorBrush x:Key="MainColor" Color="DeepSkyBlue"/>
    <SolidColorBrush x:Key="MainColorLight" Color="LightSkyBlue"/>
    <SolidColorBrush x:Key="MainColorDark" Color="#00A7DF"/>

    <SolidColorBrush x:Key="BorderMainBrush" Color="LightGray"/>
    <SolidColorBrush x:Key="BorderDarkMainBrush" Color="#C0C0C0"/>

    <SolidColorBrush x:Key="BackgroundGrayDark" Color="#FFEFEFEF"/>
    <SolidColorBrush x:Key="BackgroundGrayLight" Color="#F5F5F5"/>

    <SolidColorBrush x:Key="ForegroundDisabledBrush" Color="DimGray"/>
    <SolidColorBrush x:Key="ForegroundBrush" Color="Black"/>


    <LinearGradientBrush x:Key="FormBackgroundBrush"
                             EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFFFFD" Offset="0.31" />
        <GradientStop Color="#FFF8F8F8" Offset="1" />
    </LinearGradientBrush>


    <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="20" />
            </Grid.ColumnDefinitions>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal">
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Fill.GradientStops[0].Offset" Storyboard.TargetName="rectangle">
                                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="MouseOver"/>
                    <VisualState x:Name="Pressed">
                        <Storyboard>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="Fill.GradientStops[0].Color" Storyboard.TargetName="rectangle">
                                <EasingColorKeyFrame KeyTime="0" Value="{StaticResource Fill_pressed_dark}"/>
                            </ColorAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Fill.GradientStops[1].Offset" Storyboard.TargetName="rectangle">
                                <EasingDoubleKeyFrame KeyTime="0" Value="0.316"/>
                            </DoubleAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="Fill.GradientStops[1].Color" Storyboard.TargetName="rectangle">
                                <EasingColorKeyFrame KeyTime="0" Value="{StaticResource Fill_pressed_light}"/>
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="Fill.Color" Storyboard.TargetName="Arrow">
                                <EasingColorKeyFrame KeyTime="0" Value="#FFC5C5C5"/>
                            </ColorAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Fill.GradientStops[0].Offset" Storyboard.TargetName="rectangle">
                                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="Fill.GradientStops[0].Color" Storyboard.TargetName="rectangle">
                                <EasingColorKeyFrame KeyTime="0" Value="{StaticResource CheckBox_fill_top}"/>
                            </ColorAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="Fill.GradientStops[1].Color" Storyboard.TargetName="rectangle">
                                <EasingColorKeyFrame KeyTime="0" Value="{StaticResource CheckBox_fill_bottom}"/>
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="CheckStates">
                    <VisualState x:Name="Checked">
                        <Storyboard>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="Fill.GradientStops[0].Color" Storyboard.TargetName="rectangle">
                                <EasingColorKeyFrame KeyTime="0" Value="{StaticResource Fill_pressed_dark}"/>
                            </ColorAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Fill.GradientStops[1].Offset" Storyboard.TargetName="rectangle">
                                <EasingDoubleKeyFrame KeyTime="0" Value="0.435"/>
                            </DoubleAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="Fill.GradientStops[1].Color" Storyboard.TargetName="rectangle">
                                <EasingColorKeyFrame KeyTime="0" Value="{StaticResource Fill_pressed_light}"/>
                            </ColorAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="Fill.Color" Storyboard.TargetName="Arrow">
                                <EasingColorKeyFrame KeyTime="0" Value="#FFCBCBCB"/>
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Unchecked"/>
                    <VisualState x:Name="Indeterminate"/>
                </VisualStateGroup>
                <VisualStateGroup x:Name="FocusStates">
                    <VisualState x:Name="Unfocused"/>
                    <VisualState x:Name="Focused"/>
                </VisualStateGroup>
                <VisualStateGroup x:Name="ValidationStates">
                    <VisualState x:Name="Valid"/>
                    <VisualState x:Name="InvalidFocused"/>
                    <VisualState x:Name="InvalidUnfocused"/>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid x:Name="Border" Grid.ColumnSpan="2">
                <Rectangle RadiusY="5" RadiusX="5" Fill="{StaticResource Shadow_second_color}" Margin="0,1,0,-1" d:IsHidden="True"/>
                <Rectangle RadiusY="4" RadiusX="4" Fill="{StaticResource Shadow_first_color}" Margin="1,0"/>
                <Rectangle x:Name="rectangle" RadiusY="2" RadiusX="2" Margin="1,0,1,1">
                    <Rectangle.Fill>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="{StaticResource Fill_normal_top}"/>
                            <GradientStop Color="{StaticResource Fill_normal_bottom}" Offset="1"/>
                        </LinearGradientBrush>
                    </Rectangle.Fill>
                    <Rectangle.Stroke>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="{StaticResource BorderStroke_top}"/>
                            <GradientStop Color="{StaticResource BorderStroke_bottom}" Offset="1"/>
                        </LinearGradientBrush>
                    </Rectangle.Stroke>
                </Rectangle>
                <Path x:Name="path" Data="M2.75,4.66667 L121.083,4.66667" Fill="White" Margin="3,1,3,0" Stretch="Fill" Stroke="{x:Null}" UseLayoutRounding="False" Height="1" VerticalAlignment="Top"/>
            </Grid>
            <Border x:Name="Border2" Grid.Column="0" SnapsToDevicePixels="True" Margin="1" Background="{StaticResource WindowBackgroundBrush}" BorderBrush="{DynamicResource BorderDarkMainBrush}" BorderThickness="0,0,1,0" />
            <Path x:Name="Arrow" Grid.Column="1" Data="M 0 0 L 4 4 L 8 0 Z" Fill="#FF838383" HorizontalAlignment="Center" VerticalAlignment="Center" />
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
        <Border x:Name="PART_ContentHost" Background="{TemplateBinding Background}" Focusable="False" />
    </ControlTemplate>

    <Style TargetType="{x:Type ComboBox}">
        <Setter Property="Foreground" Value="{DynamicResource Text_dark_}" />
        <Setter Property="Validation.ErrorTemplate" Value="{x:Null}" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsEditable" Value="False"/>
        <Setter Property="IsReadOnly" Value="True"/>
        <Setter Property="SnapsToDevicePixels" Value="false" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="Margin" Value="2" />
        <Setter Property="Height" Value="30" />
        <Setter Property="MinHeight" Value="20" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver"/>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground.Color" Storyboard.TargetName="PART_EditableTextBox">
                                            <EasingColorKeyFrame KeyTime="0" Value="{StaticResource CheckBox_stroke_color}"/>
                                        </ColorAnimationUsingKeyFrames>
                                        <BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsEnabled)" Storyboard.TargetName="ToggleButton">
                                            <DiscreteBooleanKeyFrame KeyTime="0" Value="True"/>
                                        </BooleanAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Unfocused"/>
                                <VisualState x:Name="Focused"/>
                                <VisualState x:Name="FocusedDropDown">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground.Color" Storyboard.TargetName="PART_EditableTextBox">
                                            <EasingColorKeyFrame KeyTime="0" Value="{StaticResource TextBox_fill}"/>
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ToggleButton x:Name="ToggleButton" Grid.Column="2" ClickMode="Press" Focusable="false"
            			IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
            			Template="{StaticResource ComboBoxToggleButton}"/>

                        <ContentPresenter Margin="6,3,23,3" Content="{TemplateBinding SelectionBoxItem}"
            			ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
            			ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
            			HorizontalAlignment="Left" IsHitTestVisible="False" x:Name="ContentSite"
            			VerticalAlignment="Center" />

                        <TextBox Style="{x:Null}" x:Name="PART_EditableTextBox" Margin="3,3,23,3" Background="Transparent"
            			Focusable="True" HorizontalAlignment="Left" IsReadOnly="{TemplateBinding IsReadOnly}"
            			Template="{StaticResource ComboBoxTextBox}" VerticalAlignment="Center" Visibility="Hidden" />

                        <Popup AllowsTransparency="True" Focusable="False" IsOpen="{TemplateBinding IsDropDownOpen}" x:Name="Popup" Placement="Bottom" PopupAnimation="Fade">
                            <Grid MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{TemplateBinding ActualWidth}" x:Name="DropDown" >
                                <Border BorderThickness="0" CornerRadius="2" Background="#0C000000" />
                                <Border x:Name="DropDownBorder" BorderBrush="{DynamicResource BorderMainBrush}" BorderThickness="1" CornerRadius="2" Margin="1" >
                                    <Border.Background>
                                        <SolidColorBrush Color="{DynamicResource TextBox_fill}"/>
                                    </Border.Background>
                                </Border>
                                <ScrollViewer Margin="2" SnapsToDevicePixels="True">
                                    <StackPanel KeyboardNavigation.DirectionalNavigation="Contained" IsItemsHost="True" TextBlock.Foreground="#FF717171" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDropDownOpen" Value="True">
                            <Setter Property="Foreground"  Value="{DynamicResource Text_light_}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground"  Value="{DynamicResource Text_disabled_}"/>
                        </Trigger>
                        <Trigger Property="HasItems" Value="false">
                            <Setter Property="MinHeight" TargetName="DropDownBorder" Value="95" />
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                        </Trigger>
                        <Trigger Property="IsEditable" Value="true">
                            <Setter Property="IsTabStop" Value="false" />
                            <Setter Property="Visibility" TargetName="PART_EditableTextBox" Value="Visible" />
                            <Setter Property="Visibility" TargetName="ContentSite" Value="Hidden" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Geometry x:Key="SliderThumbDisabledGeometry">M -5,-10.5 L 5,-10.5 L 5,10.5 L -5,10.5 Z</Geometry>
    <Geometry x:Key="SliderPointedThumbDisabledGeometry">M 4.5,-8.5 L -4.5,-8.5 L -4.5,4.5 L -0.5,8.5 L 0.5,8.5 L 4.5,4.5 Z</Geometry>
    <Geometry x:Key="SliderPointedThumbOuterBorderGeometry">M 4.5,-7.5 A 1 1 0 0 0 3.5,-8.5 L -3.5,-8.5 A 1 1 0 0 0 -4.5,-7.5 L -4.5,4.5 L -0.5,8.5 L 0.5,8.5 L 4.5,4.5 Z</Geometry>
    <Geometry x:Key="SliderPointedThumbMiddleBorderGeometry">M 3.5,-7.5 L -3.5,-7.5 L -3.5,4.5 L 0,8 L 3.5,4.5 Z</Geometry>

    <SolidColorBrush x:Key="HorizontalSliderTrackNormalBackground" Color="#FFE7EAEA"/>
    <Style x:Key="SliderRepeatButtonStyle" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Rectangle Fill="Transparent"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Geometry x:Key="SliderThumbOuterBorderGeometry">M -5,-9.5 A 1 1 0 0 1 -4,-10.5 L 4,-10.5 A 1 1 0 0 1 5,-9.5 L 5,9.5 A 1 1 0 0 1 4,10.5 L -4,10.5 A 1 1 0 0 1 -5,9.5 Z</Geometry>
    <Geometry x:Key="SliderThumbMiddleBorderGeometry">M -4,-9.5 L 4,-9.5 L 4,9.5 L -4,9.5 Z</Geometry>

    <Style x:Key="HorizontalSliderThumbStyle" TargetType="{x:Type Thumb}">
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Height" Value="22"/>
        <Setter Property="Width" Value="11"/>
        <Setter Property="Foreground" Value="Gray"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver"/>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="Fill.GradientStops[0].Color" Storyboard.TargetName="Background">
                                            <EasingColorKeyFrame KeyTime="0" Value="{StaticResource Fill_over_top}"/>
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="Fill.GradientStops[1].Color" Storyboard.TargetName="Background">
                                            <EasingColorKeyFrame KeyTime="0" Value="{StaticResource Fill_over_bottom}"/>
                                        </ColorAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Offset)" Storyboard.TargetName="Background">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Offset)" Storyboard.TargetName="Background">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Canvas SnapsToDevicePixels="true">
                            <Canvas.RenderTransform>
                                <TranslateTransform X="5.5" Y="11"/>
                            </Canvas.RenderTransform>
                            <Path x:Name="OuterBorder_Copy" Data="{StaticResource SliderThumbOuterBorderGeometry}" Margin="0,1,0,0" Stroke="{x:Null}" Fill="#1E000000"/>
                            <Path x:Name="Background" Data="{StaticResource SliderThumbOuterBorderGeometry}">
                                <Path.Fill>
                                    <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                        <GradientStop Color="{DynamicResource CheckBox_fill_top}" Offset="0"/>
                                        <GradientStop Color="{DynamicResource CheckBox_fill_bottom}" Offset="1"/>
                                    </LinearGradientBrush>
                                </Path.Fill>
                            </Path>
                            <Path x:Name="OuterBorder" Data="{StaticResource SliderThumbOuterBorderGeometry}">
                                <Path.Stroke>
                                    <SolidColorBrush Color="{DynamicResource CheckBox_stroke_color}"/>
                                </Path.Stroke>
                            </Path>

                        </Canvas>
                        <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto" Margin="2,7,2,5" SnapsToDevicePixels="False">
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Rectangle Width="1" Height="1" Fill="{DynamicResource Text_light_}"/>
                            <Rectangle Width="1" Height="1" Fill="{DynamicResource Text_light_}" Grid.Row="1"/>
                            <Rectangle Width="1" Height="1" Fill="{DynamicResource Text_light_}" Grid.Column="1"/>
                            <Rectangle Width="1" Height="1" Fill="{DynamicResource Text_light_}" Grid.Row="2"/>
                            <Rectangle Width="1" Height="1" Fill="{DynamicResource Text_light_}" Grid.Column="1" Grid.Row="1"/>
                            <Rectangle Width="1" Height="1" Fill="{DynamicResource Text_light_}" Grid.Row="3"/>
                            <Rectangle Width="1" Height="1" Fill="{DynamicResource Text_light_}" Grid.Column="1" Grid.Row="2"/>
                            <Rectangle Width="1" Height="1" Fill="{DynamicResource Text_light_}" Grid.Column="1" Grid.Row="3"/>
                        </Grid>
                        <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto" Margin="2,6" SnapsToDevicePixels="False">
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Rectangle Width="1" Height="1" Fill="{DynamicResource Text_dark_}"/>
                            <Rectangle Width="1" Height="1" Fill="{DynamicResource Text_dark_}" Grid.Row="1"/>
                            <Rectangle Width="1" Height="1" Fill="{DynamicResource Text_dark_}" Grid.Column="1"/>
                            <Rectangle Width="1" Height="1" Fill="{DynamicResource Text_dark_}" Grid.Row="2"/>
                            <Rectangle Width="1" Height="1" Fill="{DynamicResource Text_dark_}" Grid.Column="1" Grid.Row="1"/>
                            <Rectangle Width="1" Height="1" Fill="{DynamicResource Text_dark_}" Grid.Row="3"/>
                            <Rectangle Width="1" Height="1" Fill="{DynamicResource Text_dark_}" Grid.Column="1" Grid.Row="2"/>
                            <Rectangle Width="1" Height="1" Fill="{DynamicResource Text_dark_}" Grid.Column="1" Grid.Row="3"/>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Fill" TargetName="Background" Value="{StaticResource CheckBox_main_color_}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="VerticalSliderThumbStyle" TargetType="{x:Type Thumb}">
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Height" Value="11"/>
        <Setter Property="Width" Value="22"/>
        <Setter Property="Foreground" Value="Gray"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver"/>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="Fill.GradientStops[0].Color" Storyboard.TargetName="Background">
                                            <EasingColorKeyFrame KeyTime="0" Value="{StaticResource Fill_over_top}"/>
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="Fill.GradientStops[1].Color" Storyboard.TargetName="Background">
                                            <EasingColorKeyFrame KeyTime="0" Value="{StaticResource Fill_over_bottom}"/>
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Canvas SnapsToDevicePixels="true">
                            <Canvas.RenderTransform>
                                <TransformGroup>
                                    <TransformGroup.Children>
                                        <TransformCollection>
                                            <RotateTransform Angle="90"/>
                                            <TranslateTransform X="11" Y="5.5"/>
                                        </TransformCollection>
                                    </TransformGroup.Children>
                                </TransformGroup>
                            </Canvas.RenderTransform>
                            <Path x:Name="Background" Data="{StaticResource SliderThumbOuterBorderGeometry}">
                                <Path.Fill>
                                    <LinearGradientBrush EndPoint="1,0" StartPoint="0,0">
                                        <GradientStop Color="{DynamicResource CheckBox_fill_top}" Offset="0"/>
                                        <GradientStop Color="{DynamicResource CheckBox_fill_bottom}" Offset="1"/>
                                    </LinearGradientBrush>
                                </Path.Fill>
                            </Path>
                            <Path x:Name="InnerBorder" Data="{StaticResource SliderThumbMiddleBorderGeometry}" Stroke="White" StrokeThickness="1" d:IsHidden="True" Visibility="Collapsed"/>
                            <Path x:Name="OuterBorder" Data="{StaticResource SliderThumbOuterBorderGeometry}" StrokeThickness="1">
                                <Path.Stroke>
                                    <SolidColorBrush Color="{DynamicResource CheckBox_stroke_color}"/>
                                </Path.Stroke>
                            </Path>
                        </Canvas>
                        <Grid HorizontalAlignment="Center" VerticalAlignment="Stretch" Width="10" Height="6" Margin="0,0,0,-1" SnapsToDevicePixels="False">
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Rectangle Width="1" Height="1" Fill="{DynamicResource Text_light_}"/>
                            <Rectangle Width="1" Height="1" Fill="{DynamicResource Text_light_}" Grid.Row="1"/>
                            <Rectangle Width="1" Height="1" Fill="{DynamicResource Text_light_}" Grid.Column="1"/>
                            <Rectangle Width="1" Height="1" Fill="{DynamicResource Text_light_}" Grid.Column="2"/>
                            <Rectangle Width="1" Height="1" Fill="{DynamicResource Text_light_}" Grid.Column="1" Grid.Row="1"/>
                            <Rectangle Width="1" Height="1" Fill="{DynamicResource Text_light_}" Grid.Column="3"/>
                            <Rectangle Width="1" Height="1" Fill="{DynamicResource Text_light_}" Grid.Row="1" Grid.Column="2"/>
                            <Rectangle Width="1" Height="1" Fill="{DynamicResource Text_light_}" Grid.Row="1" Grid.Column="3"/>
                        </Grid>
                        <Grid HorizontalAlignment="Center" VerticalAlignment="Stretch" Width="10" Height="6" Margin="0,2.5" SnapsToDevicePixels="False">
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Rectangle Width="1" Height="1" Fill="{DynamicResource Text_dark_}"/>
                            <Rectangle Width="1" Height="1" Fill="{DynamicResource Text_dark_}" Grid.Row="1"/>
                            <Rectangle Width="1" Height="1" Fill="{DynamicResource Text_dark_}" Grid.Column="1"/>
                            <Rectangle Width="1" Height="1" Fill="{DynamicResource Text_dark_}" Grid.Column="2"/>
                            <Rectangle Width="1" Height="1" Fill="{DynamicResource Text_dark_}" Grid.Column="1" Grid.Row="1"/>
                            <Rectangle Width="1" Height="1" Fill="{DynamicResource Text_dark_}" Grid.Column="3"/>
                            <Rectangle Width="1" Height="1" Fill="{DynamicResource Text_dark_}" Grid.Row="1" Grid.Column="2"/>
                            <Rectangle Width="1" Height="1" Fill="{DynamicResource Text_dark_}" Grid.Row="1" Grid.Column="3"/>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Fill" TargetName="Background" Value="{StaticResource CheckBox_main_color_}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Slider}">
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="#FFC4C4C4"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Slider}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver"/>
                                <VisualState x:Name="Disabled"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <TickBar x:Name="TopTick" Fill="{TemplateBinding Foreground}" Height="4" Placement="Top" Grid.Row="0" Visibility="Collapsed"/>
                            <TickBar x:Name="BottomTick" Fill="{TemplateBinding Foreground}" Height="4" Placement="Bottom" Grid.Row="2" Visibility="Collapsed"/>
                            <Border x:Name="TrackBackground" BorderThickness="1" CornerRadius="1" Height="6" Margin="5,0" Grid.Row="1" VerticalAlignment="center" Background="#FFd7d7d7">
                                <Border.BorderBrush>
                                    <SolidColorBrush Color="{DynamicResource CheckBox_stroke_color}"/>
                                </Border.BorderBrush>
                                <Canvas Margin="0" Height="6">
                                    <Rectangle x:Name="PART_SelectionRange" Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Height="Auto" Stroke="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" StrokeThickness="1.0" Visibility="Hidden"/>
                                </Canvas>
                            </Border>
                            <Track x:Name="PART_Track" Grid.Row="1">
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton Command="{x:Static Slider.DecreaseLarge}" Style="{StaticResource SliderRepeatButtonStyle}"/>
                                </Track.DecreaseRepeatButton>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton Command="{x:Static Slider.IncreaseLarge}" Style="{StaticResource SliderRepeatButtonStyle}"/>
                                </Track.IncreaseRepeatButton>
                                <Track.Thumb>
                                    <Thumb x:Name="Thumb" Style="{StaticResource HorizontalSliderThumbStyle}"/>
                                </Track.Thumb>
                            </Track>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="TickPlacement" Value="TopLeft">
                            <Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>

                            <Setter Property="Margin" TargetName="TrackBackground" Value="5,2,5,0"/>
                        </Trigger>
                        <Trigger Property="TickPlacement" Value="BottomRight">
                            <Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
                            <Setter Property="Margin" TargetName="TrackBackground" Value="5,0,5,2"/>
                        </Trigger>
                        <Trigger Property="TickPlacement" Value="Both">
                            <Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
                            <Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsSelectionRangeEnabled" Value="true">
                            <Setter Property="Visibility" TargetName="PART_SelectionRange" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter Property="Foreground" TargetName="Thumb" Value="Blue"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Slider}">
                            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition MinWidth="{TemplateBinding MinWidth}" Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <TickBar x:Name="TopTick" Grid.Column="0" Fill="{TemplateBinding Foreground}" Placement="Left" Visibility="Collapsed" Width="4"/>
                                    <TickBar x:Name="BottomTick" Grid.Column="2" Fill="{TemplateBinding Foreground}" Placement="Right" Visibility="Collapsed" Width="4"/>
                                    <Border x:Name="TrackBackground" BorderThickness="1" Grid.Column="1" CornerRadius="1" HorizontalAlignment="center" Margin="0,5" Width="6">
                                        <Border.Background>
                                            <SolidColorBrush Color="{DynamicResource CheckBox_main_color}"/>
                                        </Border.Background>
                                        <Border.BorderBrush>
                                            <SolidColorBrush Color="{DynamicResource CheckBox_stroke_color}"/>
                                        </Border.BorderBrush>
                                        <Canvas Margin="-1,-6">
                                            <Rectangle x:Name="PART_SelectionRange" Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Stroke="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" StrokeThickness="1.0" Visibility="Hidden" Width="4.0"/>
                                        </Canvas>
                                    </Border>
                                    <Track x:Name="PART_Track" Grid.Column="1">
                                        <Track.DecreaseRepeatButton>
                                            <RepeatButton Command="{x:Static Slider.DecreaseLarge}" Style="{StaticResource SliderRepeatButtonStyle}"/>
                                        </Track.DecreaseRepeatButton>
                                        <Track.IncreaseRepeatButton>
                                            <RepeatButton Command="{x:Static Slider.IncreaseLarge}" Style="{StaticResource SliderRepeatButtonStyle}"/>
                                        </Track.IncreaseRepeatButton>
                                        <Track.Thumb>
                                            <Thumb x:Name="Thumb" Style="{StaticResource VerticalSliderThumbStyle}"/>
                                        </Track.Thumb>
                                    </Track>
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="TickPlacement" Value="TopLeft">
                                    <Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
                                    <Setter Property="Margin" TargetName="TrackBackground" Value="2,5,0,5"/>
                                </Trigger>
                                <Trigger Property="TickPlacement" Value="BottomRight">
                                    <Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
                                    <Setter Property="Margin" TargetName="TrackBackground" Value="0,5,2,5"/>
                                </Trigger>
                                <Trigger Property="TickPlacement" Value="Both">
                                    <Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
                                    <Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
                                </Trigger>
                                <Trigger Property="IsSelectionRangeEnabled" Value="true">
                                    <Setter Property="Visibility" TargetName="PART_SelectionRange" Value="Visible"/>
                                </Trigger>
                                <Trigger Property="IsKeyboardFocused" Value="true">
                                    <Setter Property="Foreground" TargetName="Thumb" Value="Blue"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <SolidColorBrush x:Key="CheckBoxStroke" Color="#8E8F8F"/>

    <Style x:Key="CheckRadioFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="14,0,0,0" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type RadioButton}">
        <Setter Property="Foreground" Value="#FF313131" />
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <BulletDecorator Background="Transparent">
                        <BulletDecorator.Bullet>
                            <Grid Width="13" 
              Height="13" >
                                <Ellipse x:Name="Border" 
                StrokeThickness="1"  >
                                    <Ellipse.Stroke>
                                        <SolidColorBrush Color="{DynamicResource CheckBox_stroke_color}"/>
                                    </Ellipse.Stroke>
                                    <Ellipse.Fill>
                                        <SolidColorBrush Color="{DynamicResource CheckBox_main_color}"/>
                                    </Ellipse.Fill>
                                </Ellipse>
                                <Ellipse x:Name="CheckMark"
                Margin="4"
                Fill="{DynamicResource Fill_pressed_dark_}" />
                            </Grid>
                        </BulletDecorator.Bullet>
                        <ContentPresenter 
            Margin="4,0,0,0"
            VerticalAlignment="Center"
            HorizontalAlignment="Left"
            RecognizesAccessKey="True"/>
                    </BulletDecorator>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="false">
                            <Setter TargetName="CheckMark" Property="Visibility" Value="Collapsed"/>

                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="Border" Property="Fill" Value="{DynamicResource CheckBox_fill_bottom_}"  />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Border" Property="Fill" Value="#EEE" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="Border" Property="Fill" Value="{DynamicResource Fill_pressed_dark_}"  />
                            <Setter TargetName="Border" Property="Stroke" Value="{DynamicResource Fill_pressed_light_}"  />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Border" Property="Fill" Value="{DynamicResource CheckBox_fill_bottom_}"  />
                            <Setter TargetName="Border" Property="Stroke" Value="{DynamicResource CheckBox_stroke_color_}" />
                            <Setter Property="Foreground" Value="#80000000"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <SolidColorBrush x:Key="ListBorder" Color="#828790"/>

    <Style TargetType="{x:Type ListBox}">
        <Setter Property="Background" Value="{DynamicResource TextBox_fill_}"/>
        <Setter Property="BorderBrush" Value="{StaticResource CheckBox_stroke_color_}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="{DynamicResource Text_dark_}"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBox}">
                    <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="1" SnapsToDevicePixels="true" CornerRadius="1">
                        <ScrollViewer Focusable="false" Padding="{TemplateBinding Padding}">
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </ScrollViewer>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="RadioButtonLarge" TargetType="{x:Type RadioButton}">
        <Setter Property="Foreground" Value="#FF313131" />
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <BulletDecorator Background="Transparent">
                        <BulletDecorator.Bullet>
                            <Grid Width="23" 
							Height="23" >
                                <Ellipse x:Name="Border" 
								StrokeThickness="1"  >
                                    <Ellipse.Stroke>
                                        <SolidColorBrush Color="{DynamicResource CheckBox_stroke_color}"/>
                                    </Ellipse.Stroke>
                                    <Ellipse.Fill>
                                        <SolidColorBrush Color="{DynamicResource CheckBox_main_color}"/>
                                    </Ellipse.Fill>
                                </Ellipse>
                                <Ellipse x:Name="CheckMark"
								Margin="6"
								Fill="{DynamicResource Fill_pressed_dark_}" />
                            </Grid>
                        </BulletDecorator.Bullet>
                        <ContentPresenter 
						Margin="6,0,0,0"
						VerticalAlignment="Center"
						HorizontalAlignment="Left"
						RecognizesAccessKey="True"/>
                    </BulletDecorator>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="false">
                            <Setter TargetName="CheckMark" Property="Visibility" Value="Collapsed"/>

                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="Border" Property="Fill" Value="{DynamicResource CheckBox_fill_bottom_}"  />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Border" Property="Fill" Value="#EEE" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="Border" Property="Fill" Value="{DynamicResource Fill_pressed_dark_}"  />
                            <Setter TargetName="Border" Property="Stroke" Value="{DynamicResource Fill_pressed_light_}"  />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Border" Property="Fill" Value="#000"  />
                            <Setter TargetName="Border" Property="Stroke" Value="#40000000" />
                            <Setter Property="Foreground" Value="#80000000"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <LinearGradientBrush x:Key="TextBoxBorder" EndPoint="0,20" MappingMode="Absolute" StartPoint="0,0">
        <GradientStop Color="#ABADB3" Offset="0.05"/>
        <GradientStop Color="#E2E3EA" Offset="0.07"/>
        <GradientStop Color="#E3E9EF" Offset="1"/>
    </LinearGradientBrush>


    <Style TargetType="{x:Type TextBox}">
        <Setter Property="Foreground" Value="{DynamicResource Text_dark_}"/>
        <Setter Property="Background" Value="#55FFFFFF"/>
        <Setter Property="BorderBrush" Value="{StaticResource TextBoxBorder}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="AllowDrop" Value="true"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="Disabled"/>
                                <VisualState x:Name="ReadOnly"/>
                                <VisualState x:Name="MouseOver"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle x:Name="rectangle1" Margin="0,1,0,-1" RadiusY="3" RadiusX="3" Fill="{TemplateBinding Background}"/>
                        <Rectangle x:Name="rectangle" Margin="0" RadiusY="3" RadiusX="3">
                            <Rectangle.Fill>
                                <SolidColorBrush Color="{StaticResource TextBox_fill}"/>
                            </Rectangle.Fill>
                            <Rectangle.Stroke>
                                <SolidColorBrush Color="{StaticResource CheckBox_stroke_color}"/>
                            </Rectangle.Stroke>
                        </Rectangle>
                        <Grid Margin="{TemplateBinding Padding}" VerticalAlignment="Center">
                            <ScrollViewer  x:Name="PART_ContentHost"  BorderThickness="0" IsTabStop="False" Margin="1" 
                                        Padding="{TemplateBinding Padding}" Foreground="{DynamicResource Text_dark_}" CanContentScroll="False" VerticalContentAlignment="Stretch" />
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Fill" TargetName="rectangle" Value="{DynamicResource CheckBox_fill_bottom_}"/>
                            <Setter Property="Background" TargetName="PART_ContentHost" Value="#00000000"/>
                            <Setter Property="Foreground" Value="#80000000"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CheckToogleButton" TargetType="{x:Type CheckBox}">
        <Setter Property="Foreground" Value="#FF313131" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.2"/>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="PointerOver"/>
                                <VisualState x:Name="Pressed"/>
                                <VisualState x:Name="Disabled"/>
                                <VisualState x:Name="CheckedPointerOver"/>
                                <VisualState x:Name="CheckedPressed"/>
                                <VisualState x:Name="CheckedDisabled"/>
                                <VisualState x:Name="Indeterminate2"/>
                                <VisualState x:Name="IndeterminatePointerOver"/>
                                <VisualState x:Name="IndeterminatePressed"/>
                                <VisualState x:Name="IndeterminateDisabled"/>
                                <VisualState x:Name="Normal"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.2">
                                        <VisualTransition.GeneratedEasingFunction>
                                            <QuinticEase EasingMode="EaseOut"/>
                                        </VisualTransition.GeneratedEasingFunction>
                                    </VisualTransition>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="RenderTransform.Children[3].X" Storyboard.TargetName="ChToogleButton">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="25"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked"/>
                                <VisualState x:Name="Indeterminate"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Unfocused"/>
                                <VisualState x:Name="PointerFocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid x:Name="ChToogleStateBackground" Margin="0,0,1,0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Border x:Name="ChTglBorderON" CornerRadius="3" Margin="1,0,0,1" BorderThickness="1">
                                <Border.BorderBrush>
                                    <SolidColorBrush Color="{DynamicResource CheckBox_stroke_color}"/>
                                </Border.BorderBrush>
                                <Border.Background>
                                    <SolidColorBrush Color="{DynamicResource Fill_active_bottom}"/>
                                </Border.Background>
                            </Border>
                            <Border x:Name="ChTglBorderOFF" Grid.Column="1" CornerRadius="3" Margin="0,0,1,1" BorderThickness="1">
                                <Border.BorderBrush>
                                    <SolidColorBrush Color="{DynamicResource Text_dark}"/>
                                </Border.BorderBrush>
                                <Border.Background>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="{DynamicResource Fill_pressed_dark}" Offset="0"/>
                                        <GradientStop Color="{DynamicResource Fill_pressed_light}" Offset="0.327"/>
                                    </LinearGradientBrush>
                                </Border.Background>
                            </Border>
                            <TextBlock SnapsToDevicePixels="True" Grid.Column="1" Text="OFF" HorizontalAlignment="Right" VerticalAlignment="Center" Padding="0,0,6,0" FontSize="8" FontWeight="Bold">
                                <TextBlock.Foreground>
                                    <SolidColorBrush Color="{DynamicResource TextBox_fill}"/>
                                </TextBlock.Foreground></TextBlock>
                            <TextBlock SnapsToDevicePixels="True" Grid.Column="0" Text="ON" HorizontalAlignment="Left" VerticalAlignment="Center" Padding="6,0,0,0" FontSize="8" FontWeight="Bold">
                                <TextBlock.Foreground>
                                    <SolidColorBrush Color="{DynamicResource TextBox_fill}"/>
                                </TextBlock.Foreground></TextBlock>
                        </Grid>
                        <Grid x:Name="ChToogleButton" Margin="0,0,25,0" RenderTransformOrigin="0.5,0.5">
                            <Grid.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform/>
                                    <SkewTransform/>
                                    <RotateTransform/>
                                    <TranslateTransform X="0"/>
                                </TransformGroup>
                            </Grid.RenderTransform>
                            <Rectangle RadiusY="5" RadiusX="5" Fill="{StaticResource Shadow_second_color}" Margin="0,1,0,-1" d:IsHidden="True"/>
                            <Rectangle RadiusY="4" RadiusX="4" Fill="{StaticResource Shadow_first_color}" Margin="1,0"/>
                            <Rectangle x:Name="rectangle" RadiusY="2" RadiusX="2" Margin="1,0,1,1">
                                <Rectangle.Fill>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="{StaticResource Fill_normal_top}"/>
                                        <GradientStop Color="{StaticResource Fill_normal_bottom}" Offset="1"/>
                                    </LinearGradientBrush>
                                </Rectangle.Fill>
                                <Rectangle.Stroke>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="{StaticResource BorderStroke_top}"/>
                                        <GradientStop Color="{StaticResource BorderStroke_bottom}" Offset="1"/>
                                    </LinearGradientBrush>
                                </Rectangle.Stroke>
                            </Rectangle>
                            <Grid x:Name="ChToogleText" Margin="0,0,0.4,0.4">
                                <TextBlock x:Name="ChTglBackText" Grid.Column="1" HorizontalAlignment="Center" Margin="7,1,0,-1" TextWrapping="Wrap" Text="{TemplateBinding Content}" VerticalAlignment="Center" FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}" FontWeight="{TemplateBinding FontWeight}" FontStyle="{TemplateBinding FontStyle}" Foreground="White"/>
                                <TextBlock x:Name="ChTglMainText" Grid.Column="1" Margin="7,0,0,0" TextWrapping="Wrap" Text="{TemplateBinding Content}" FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}" FontWeight="{TemplateBinding FontWeight}" FontStyle="{TemplateBinding FontStyle}" ToolTipService.ToolTip="{TemplateBinding ToolTipService.ToolTip}" Panel.ZIndex="1" HorizontalAlignment="Center" VerticalAlignment="Center" IsEnabled="False">
                                    <TextBlock.Foreground>
                                        <SolidColorBrush Color="{DynamicResource Text_dark}"/>
                                    </TextBlock.Foreground>
                                </TextBlock>
                            </Grid>
                            <Grid Margin="0">
                                <Grid HorizontalAlignment="Left" VerticalAlignment="Center" Width="7" Height="10" Margin="4,0,0,-1" SnapsToDevicePixels="False">
                                    <Grid.RowDefinitions>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>
                                    <Rectangle Width="1" Height="1" Fill="{DynamicResource Text_light_}"/>
                                    <Rectangle Width="1" Height="1" Fill="{DynamicResource Text_light_}" Grid.Row="1"/>
                                    <Rectangle Width="1" Height="1" Fill="{DynamicResource Text_light_}" Grid.Column="1"/>
                                    <Rectangle Width="1" Height="1" Fill="{DynamicResource Text_light_}" Grid.Row="2"/>
                                    <Rectangle Width="1" Height="1" Fill="{DynamicResource Text_light_}" Grid.Column="1" Grid.Row="1"/>
                                    <Rectangle Width="1" Height="1" Fill="{DynamicResource Text_light_}" Grid.Row="3"/>
                                    <Rectangle Width="1" Height="1" Fill="{DynamicResource Text_light_}" Grid.Column="1" Grid.Row="2"/>
                                    <Rectangle Width="1" Height="1" Fill="{DynamicResource Text_light_}" Grid.Column="1" Grid.Row="3"/>
                                </Grid>
                                <Grid HorizontalAlignment="Left" VerticalAlignment="Center" Width="7" Height="10" Margin="4,0,0,0" SnapsToDevicePixels="False">
                                    <Grid.RowDefinitions>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>
                                    <Rectangle Width="1" Height="1" Fill="{DynamicResource Text_dark_}"/>
                                    <Rectangle Width="1" Height="1" Fill="{DynamicResource Text_dark_}" Grid.Row="1"/>
                                    <Rectangle Width="1" Height="1" Fill="{DynamicResource Text_dark_}" Grid.Column="1"/>
                                    <Rectangle Width="1" Height="1" Fill="{DynamicResource Text_dark_}" Grid.Row="2"/>
                                    <Rectangle Width="1" Height="1" Fill="{DynamicResource Text_dark_}" Grid.Column="1" Grid.Row="1"/>
                                    <Rectangle Width="1" Height="1" Fill="{DynamicResource Text_dark_}" Grid.Row="3"/>
                                    <Rectangle Width="1" Height="1" Fill="{DynamicResource Text_dark_}" Grid.Column="1" Grid.Row="2"/>
                                    <Rectangle Width="1" Height="1" Fill="{DynamicResource Text_dark_}" Grid.Column="1" Grid.Row="3"/>
                                </Grid>
                                <Grid HorizontalAlignment="Right" VerticalAlignment="Center" Width="7" Height="10" Margin="0,0,4,-1" SnapsToDevicePixels="False">
                                    <Grid.RowDefinitions>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>
                                    <Rectangle Width="1" Height="1" Fill="{DynamicResource Text_light_}"/>
                                    <Rectangle Width="1" Height="1" Fill="{DynamicResource Text_light_}" Grid.Row="1"/>
                                    <Rectangle Width="1" Height="1" Fill="{DynamicResource Text_light_}" Grid.Column="1"/>
                                    <Rectangle Width="1" Height="1" Fill="{DynamicResource Text_light_}" Grid.Row="2"/>
                                    <Rectangle Width="1" Height="1" Fill="{DynamicResource Text_light_}" Grid.Column="1" Grid.Row="1"/>
                                    <Rectangle Width="1" Height="1" Fill="{DynamicResource Text_light_}" Grid.Row="3"/>
                                    <Rectangle Width="1" Height="1" Fill="{DynamicResource Text_light_}" Grid.Column="1" Grid.Row="2"/>
                                    <Rectangle Width="1" Height="1" Fill="{DynamicResource Text_light_}" Grid.Column="1" Grid.Row="3"/>
                                </Grid>
                                <Grid HorizontalAlignment="Right" VerticalAlignment="Center" Width="7" Height="10" Margin="0,0,4,0" SnapsToDevicePixels="False">
                                    <Grid.RowDefinitions>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>
                                    <Rectangle Width="1" Height="1" Fill="{DynamicResource Text_dark_}"/>
                                    <Rectangle Width="1" Height="1" Fill="{DynamicResource Text_dark_}" Grid.Row="1"/>
                                    <Rectangle Width="1" Height="1" Fill="{DynamicResource Text_dark_}" Grid.Column="1"/>
                                    <Rectangle Width="1" Height="1" Fill="{DynamicResource Text_dark_}" Grid.Row="2"/>
                                    <Rectangle Width="1" Height="1" Fill="{DynamicResource Text_dark_}" Grid.Column="1" Grid.Row="1"/>
                                    <Rectangle Width="1" Height="1" Fill="{DynamicResource Text_dark_}" Grid.Row="3"/>
                                    <Rectangle Width="1" Height="1" Fill="{DynamicResource Text_dark_}" Grid.Column="1" Grid.Row="2"/>
                                    <Rectangle Width="1" Height="1" Fill="{DynamicResource Text_dark_}" Grid.Column="1" Grid.Row="3"/>
                                </Grid>
                            </Grid>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="ChTglMainText" Property="Foreground" Value="#80000000"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ListBoxItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Grid>
                        <Rectangle x:Name="Backgrd"/>
                        <Border Background="Transparent"
                    CornerRadius="2"
                    BorderThickness="2"
                    x:Name="IconBorder"
                    Padding="2,4" >
                            <ContentPresenter x:Name="TextData"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter TargetName="Backgrd" Property="Fill" Value="{DynamicResource ActiveBrush}"/>
                            <Setter Property="Foreground" Value="{DynamicResource Text_light_}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ComboBoxItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Grid>
                        <Rectangle x:Name="Backgrd"/>
                        <Border Background="Transparent"
                    CornerRadius="2"
                    BorderThickness="2"
                    x:Name="IconBorder"
                    Padding="2,4" >
                            <ContentPresenter x:Name="TextData"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="true">
                            <Setter Property="Background" Value="#FFC5CD2D" />
                            <Setter Property="BorderBrush" Value="Black" />
                            <Setter Property="BorderThickness" Value="1"/>
                            <Setter Property="Foreground" Value="Black" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter TargetName="Backgrd" Property="Fill" Value="{DynamicResource ActiveBrush}"/>
                            <Setter Property="Foreground" Value="{DynamicResource Text_light_}"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource Text_dark_}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <!-- Highlight a grid row as the mouse passes over -->
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#FF8DB622" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <LinearGradientBrush x:Key="ActiveBrush" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="{StaticResource Fill_active_top}" Offset="0.31" />
        <GradientStop Color="{StaticResource Fill_active_bottom}" Offset="1" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="ActiveBrush2" EndPoint="0.5,1" StartPoint="0.3,0">
        <GradientStop Color="#FF1A7C15" Offset="0.1" />
        <GradientStop Color="#FFF0A523" Offset="0.9" />
    </LinearGradientBrush>
    <Style TargetType="{x:Type DataGrid}">
        <!-- Make the border and grid lines a little less imposing -->
        <Setter Property="BorderBrush" Value="#DDDDDD" />
        <Setter Property="HorizontalGridLinesBrush" Value="#FFAEC76D" />
        <Setter Property="VerticalGridLinesBrush" Value="#FFD6D15D" />
        <Setter Property="RowStyle">
            <Setter.Value>
                <Style TargetType="{x:Type DataGridRow}">
                    <Style.Triggers>
                        <!-- Highlight a grid row as the mouse passes over -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#FF8DB622" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="CellStyle">
            <Setter.Value>
                <Style TargetType="{x:Type DataGridCell}">
                    <!-- Add some padding around the contents of a cell -->
                    <Setter Property="Padding" Value="4,3,4,3" />
                    <Setter Property="BorderBrush" Value="Transparent"/>
                    <Setter Property="BorderThickness" Value="1"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type DataGridCell}">
                                <Border Padding="{TemplateBinding Padding}" 
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="{TemplateBinding BorderThickness}"
                                            Background="{TemplateBinding Background}">
                                    <ContentPresenter />
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="FocusVisualStyle">
                        <Setter.Value>
                            <Style TargetType="{x:Type Control}">
                                <Setter Property="BorderBrush" Value="Transparent" />
                            </Style>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <!-- Highlight selected rows -->
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="#FFFAA11A" />
                            <Setter Property="BorderBrush" Value="Transparent" />
                            <Setter Property="Foreground" Value="Black" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="Background" Value="#FFC5CD2D" />
                            <Setter Property="BorderBrush" Value="Black" />
                            <Setter Property="BorderThickness" Value="1"/>
                            <Setter Property="Foreground" Value="Black" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>
    <!--sadfdf-->
    <!-- =============================================================================== -->
    <!-- TimePicker                                                                      -->
    <!-- =============================================================================== -->


    <!--In this example, an implecit style for Calendar is defined elsewhere 
  in the application.  DatePickerCalendarStyle is based on the implicit 
  style so that the DatePicker will use the application's calendar style.-->
    <Style x:Key="DatePickerCalendarStyle"
       TargetType="{x:Type Calendar}"
       BasedOn="{StaticResource {x:Type Calendar}}" />

    <!--The template for the button that displays the calendar.-->
    <Style x:Key="DropDownButtonStyle"
       TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0" />
                                    <VisualTransition GeneratedDuration="0:0:0.1"
                                  To="MouseOver" />
                                    <VisualTransition GeneratedDuration="0:0:0.1"
                                  To="Pressed" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames BeginTime="0"
                                                Duration="00:00:00.001"
                                                Storyboard.TargetName="BackgroundGradient"
                                                Storyboard.TargetProperty="(Border.Background).                     (GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                            <SplineColorKeyFrame KeyTime="0"
                                         Value="#F2FFFFFF" />
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames BeginTime="0"
                                                Duration="00:00:00.001"
                                                Storyboard.TargetName="BackgroundGradient"
                                                Storyboard.TargetProperty="(Border.Background).                     (GradientBrush.GradientStops)[2].(GradientStop.Color)">
                                            <SplineColorKeyFrame KeyTime="0"
                                         Value="#CCFFFFFF" />
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimation Duration="0"
                                  To="#FF448DCA"
                                  Storyboard.TargetProperty="(Border.Background).                             (SolidColorBrush.Color)"
                                  Storyboard.TargetName="Background" />
                                        <ColorAnimationUsingKeyFrames BeginTime="0"
                                                Duration="00:00:00.001"
                                                Storyboard.TargetName="BackgroundGradient"
                                                Storyboard.TargetProperty="(Border.Background).                     (GradientBrush.GradientStops)[3].(GradientStop.Color)">
                                            <SplineColorKeyFrame KeyTime="0"
                                         Value="#7FFFFFFF" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames BeginTime="0"
                                                Duration="00:00:00.001"
                                                Storyboard.TargetName="Background"
                                                Storyboard.TargetProperty="(Border.Background).                       (SolidColorBrush.Color)">
                                            <SplineColorKeyFrame KeyTime="0"
                                         Value="#FF448DCA" />
                                        </ColorAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames BeginTime="0"
                                                 Duration="00:00:00.001"
                                                 Storyboard.TargetProperty="(UIElement.Opacity)"
                                                 Storyboard.TargetName="Highlight">
                                            <SplineDoubleKeyFrame KeyTime="0"
                                          Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames BeginTime="0"
                                                Duration="00:00:00.001"
                                                Storyboard.TargetName="BackgroundGradient"
                                                Storyboard.TargetProperty="(Border.Background).                     (GradientBrush.GradientStops)[0].(GradientStop.Color)">
                                            <SplineColorKeyFrame KeyTime="0"
                                         Value="#F4FFFFFF" />
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames BeginTime="0"
                                                Duration="00:00:00.001"
                                                Storyboard.TargetName="BackgroundGradient"
                                                Storyboard.TargetProperty="(Border.Background).                     (GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                            <SplineColorKeyFrame KeyTime="0"
                                         Value="#EAFFFFFF" />
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames BeginTime="0"
                                                Duration="00:00:00.001"
                                                Storyboard.TargetName="BackgroundGradient"
                                                Storyboard.TargetProperty="(Border.Background).                     (GradientBrush.GradientStops)[2].(GradientStop.Color)">
                                            <SplineColorKeyFrame KeyTime="0"
                                         Value="#C6FFFFFF" />
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames BeginTime="0"
                                                Duration="00:00:00.001"
                                                Storyboard.TargetName="BackgroundGradient"
                                                Storyboard.TargetProperty="(Border.Background).                     (GradientBrush.GradientStops)[3].(GradientStop.Color)">
                                            <SplineColorKeyFrame KeyTime="0"
                                         Value="#6BFFFFFF" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid Background="#11FFFFFF"
                FlowDirection="LeftToRight"
                HorizontalAlignment="Center"
                Height="18"
                Margin="0"
                VerticalAlignment="Center"
                Width="19">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="20*" />
                                <ColumnDefinition Width="20*" />
                                <ColumnDefinition Width="20*" />
                                <ColumnDefinition Width="20*" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="23*" />
                                <RowDefinition Height="19*" />
                                <RowDefinition Height="19*" />
                                <RowDefinition Height="19*" />
                            </Grid.RowDefinitions>
                            <Border x:Name="Highlight"
                    BorderThickness="1"
                    Grid.ColumnSpan="4"
                    CornerRadius="0,0,1,1"
                    Margin="-1"
                    Opacity="1"
                    Grid.Row="0"
                    Grid.RowSpan="4">
                                <Border.BorderBrush>
                                    <SolidColorBrush Color="{DynamicResource ControlPressedColor}" />
                                </Border.BorderBrush>
                            </Border>
                            <Border x:Name="Background"
                    BorderBrush="#FFFFFFFF"
                    BorderThickness="1"
                    Grid.ColumnSpan="4"
                    CornerRadius=".5"
                    Margin="0,-1,0,0"
                    Opacity="1"
                    Grid.Row="1"
                    Grid.RowSpan="3">
                                <Border.Background>
                                    <SolidColorBrush Color="{DynamicResource ControlDarkColor}" />
                                </Border.Background>
                            </Border>
                            <Border x:Name="BackgroundGradient"
                    BorderBrush="#BF000000"
                    BorderThickness="1"
                    Grid.ColumnSpan="4"
                    CornerRadius=".5"
                    Margin="0,-1,0,0"
                    Opacity="1"
                    Grid.Row="1"
                    Grid.RowSpan="3">
                                <Border.Background>
                                    <LinearGradientBrush EndPoint=".7,1"
                                     StartPoint=".7,0">
                                        <GradientStop Color="#FFFFFFFF"
                                Offset="0" />
                                        <GradientStop Color="#F9FFFFFF"
                                Offset="0.375" />
                                        <GradientStop Color="#E5FFFFFF"
                                Offset="0.625" />
                                        <GradientStop Color="#C6FFFFFF"
                                Offset="1" />
                                    </LinearGradientBrush>
                                </Border.Background>
                            </Border>
                            <Rectangle Grid.ColumnSpan="4"
                       Grid.RowSpan="1"
                       StrokeThickness="1">
                                <Rectangle.Fill>
                                    <LinearGradientBrush EndPoint="0,1"
                                     StartPoint="0,0">
                                        <GradientStop Color="{DynamicResource HeaderTopColor}" />
                                        <GradientStop Color="{DynamicResource ControlMediumColor}"
                                Offset="1" />
                                    </LinearGradientBrush>
                                </Rectangle.Fill>
                                <Rectangle.Stroke>
                                    <LinearGradientBrush EndPoint="0.48,-1"
                                     StartPoint="0.48,1.25">
                                        <GradientStop Color="#FF494949" />
                                        <GradientStop Color="#FF9F9F9F"
                                Offset="1" />
                                    </LinearGradientBrush>
                                </Rectangle.Stroke>
                            </Rectangle>
                            <Path Fill="#FF2F2F2F"
                  Grid.Row="1"
                  Grid.Column="0"
                  Grid.RowSpan="3"
                  Grid.ColumnSpan="4"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center"
                  RenderTransformOrigin="0.5,0.5"
                  Margin="4,3,4,3"
                  Stretch="Fill"
                  Data="M11.426758,8.4305077 L11.749023,8.4305077                      L11.749023,16.331387 L10.674805,16.331387                      L10.674805,10.299648 L9.0742188,11.298672                     L9.0742188,10.294277 C9.4788408,10.090176                      9.9094238,9.8090878 10.365967,9.4510155                      C10.82251,9.0929432 11.176106,8.7527733                      11.426758,8.4305077 z M14.65086,8.4305077                      L18.566387,8.4305077 L18.566387,9.3435936                      L15.671368,9.3435936 L15.671368,11.255703                      C15.936341,11.058764 16.27293,10.960293                      16.681133,10.960293 C17.411602,10.960293                      17.969301,11.178717 18.354229,11.615566                      C18.739157,12.052416 18.931622,12.673672                     18.931622,13.479336 C18.931622,15.452317                      18.052553,16.438808 16.294415,16.438808                     C15.560365,16.438808 14.951641,16.234707                      14.468243,15.826504 L14.881817,14.929531                     C15.368796,15.326992 15.837872,15.525723                      16.289043,15.525723 C17.298809,15.525723                      17.803692,14.895514 17.803692,13.635098                      C17.803692,12.460618 17.305971,11.873379                      16.310528,11.873379 C15.83071,11.873379                      15.399232,12.079271 15.016094,12.491055                     L14.65086,12.238613 z" />
                            <Ellipse Grid.ColumnSpan="4"
                     Fill="#FFFFFFFF"
                     HorizontalAlignment="Center"
                     Height="3"
                     StrokeThickness="0"
                     VerticalAlignment="Center"
                     Width="3" />
                            <Border x:Name="DisabledVisual"
                    BorderBrush="#B2FFFFFF"
                    BorderThickness="1"
                    Grid.ColumnSpan="4"
                    CornerRadius="0,0,.5,.5"
                    Opacity="0"
                    Grid.Row="0"
                    Grid.RowSpan="4" />
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type DatePicker}">
        <Setter Property="Foreground"
          Value="#FF99C327" />
        <Setter Property="IsTodayHighlighted"
          Value="True" />
        <Setter Property="SelectedDateFormat"
          Value="Short" />
        <Setter Property="Padding"
          Value="2" />
        <Setter Property="BorderThickness"
          Value="1" />
        <Setter Property="HorizontalContentAlignment"
          Value="Stretch" />
        <!--Set CalendarStyle to DatePickerCalendarStyle.-->
        <Setter Property="CalendarStyle"
          Value="{DynamicResource DatePickerCalendarStyle}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DatePicker}">
                    <Border BorderThickness="{TemplateBinding BorderThickness}"
                Padding="{TemplateBinding Padding}">
                        <Border.BorderBrush>
                            <LinearGradientBrush EndPoint="0.5,1"
                                 StartPoint="0.5,0">
                                <GradientStop Color="{DynamicResource BorderLightColor}"
                            Offset="0" />
                                <GradientStop Color="{DynamicResource BorderDarkColor}"
                            Offset="1" />
                            </LinearGradientBrush>
                        </Border.BorderBrush>
                        <Border.Background>
                            <LinearGradientBrush EndPoint="0.5,1"
                                 StartPoint="0.5,0">
                                <GradientStop Color="Orange"
                            Offset="0" />
                                <GradientStop Color="{DynamicResource ControlMediumColor}"
                            Offset="1" />
                            </LinearGradientBrush>
                        </Border.Background>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0"
                                   To="1"
                                   Storyboard.TargetProperty="Opacity"
                                   Storyboard.TargetName="PART_DisabledVisual" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid x:Name="PART_Root"
                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Button x:Name="PART_Button"
                    Grid.Column="1"
                    Foreground="{TemplateBinding Foreground}"
                    Focusable="False"
                    HorizontalAlignment="Left"
                    Margin="3,0,3,0"
                    Grid.Row="0"
                    Style="{StaticResource DropDownButtonStyle}"
                    VerticalAlignment="Top" />
                            <DatePickerTextBox x:Name="PART_TextBox"
                               Grid.Column="0"
                               Foreground="{TemplateBinding Foreground}"
                               Focusable="{TemplateBinding Focusable}"
                               HorizontalContentAlignment="Stretch"
                               Grid.Row="0"
                               VerticalContentAlignment="Stretch" />
                            <Grid x:Name="PART_DisabledVisual"
                  Grid.ColumnSpan="2"
                  Grid.Column="0"
                  IsHitTestVisible="False"
                  Opacity="0"
                  Grid.Row="0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <Rectangle Grid.Column="0"
                         Fill="#A5FFFFFF"
                         RadiusY="1"
                         Grid.Row="0"
                         RadiusX="1" />
                                <Rectangle Grid.Column="1"
                         Fill="#A5FFFFFF"
                         Height="18"
                         Margin="3,0,3,0"
                         RadiusY="1"
                         Grid.Row="0"
                         RadiusX="1"
                         Width="19" />
                                <Popup x:Name="PART_Popup"
                     AllowsTransparency="True"
                     Placement="Bottom"
                     PlacementTarget="{Binding ElementName=PART_TextBox}"
                     StaysOpen="False" />
                            </Grid>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="TimePickerStyle1" TargetType="{x:Type xctk:TimePicker}">
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource {ComponentResourceKey ResourceId=ControlNormalBorderKey, TypeInTargetAssembly={x:Type Themes:ResourceKeys}}}"/>
        <Setter Property="BorderThickness" Value="1,1,0,1"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="HorizontalContentAlignment" Value="Right"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="TextAlignment" Value="Right"/>
        <Setter Property="WatermarkTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ContentControl Content="{Binding}" Foreground="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Focusable="False" Margin="0,0,3,0"/>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type xctk:TimePicker}">
                    <Grid x:Name="root">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <xctk:ButtonSpinner x:Name="PART_Spinner" AllowSpin="{TemplateBinding AllowSpin}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" ButtonSpinnerLocation="{TemplateBinding ButtonSpinnerLocation}" Background="{TemplateBinding Background}" HorizontalContentAlignment="Stretch" IsTabStop="False" ShowButtonSpinner="{TemplateBinding ShowButtonSpinner}" VerticalContentAlignment="Stretch">
                            <xctk:WatermarkTextBox x:Name="PART_TextBox" AcceptsReturn="False" BorderThickness="0" Background="Transparent" Foreground="{TemplateBinding Foreground}" FontWeight="{TemplateBinding FontWeight}" FontStyle="{TemplateBinding FontStyle}" FontStretch="{TemplateBinding FontStretch}" FontSize="{TemplateBinding FontSize}" FontFamily="{TemplateBinding FontFamily}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsTabStop="True" IsUndoEnabled="True" MinWidth="20" Padding="{TemplateBinding Padding}" TextAlignment="{TemplateBinding TextAlignment}" TextWrapping="NoWrap" Text="{Binding Text, RelativeSource={RelativeSource TemplatedParent}}" TabIndex="{TemplateBinding TabIndex}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" WatermarkTemplate="{TemplateBinding WatermarkTemplate}" Watermark="{TemplateBinding Watermark}"/>
                        </xctk:ButtonSpinner>
                        <ToggleButton x:Name="_timePickerToggleButton"  Background="Orange" Grid.Column="1" Focusable="False" IsChecked="{Binding IsOpen, RelativeSource={RelativeSource TemplatedParent}}">
                            <ToggleButton.IsHitTestVisible>
                                <Binding Path="IsOpen" RelativeSource="{RelativeSource TemplatedParent}">
                                    <Binding.Converter>
                                        <xctk:InverseBoolConverter/>
                                    </Binding.Converter>
                                </Binding>
                            </ToggleButton.IsHitTestVisible>
                            <ToggleButton.IsEnabled>
                                <Binding Path="IsReadOnly" RelativeSource="{RelativeSource TemplatedParent}">
                                    <Binding.Converter>
                                        <xctk:InverseBoolConverter/>
                                    </Binding.Converter>
                                </Binding>
                            </ToggleButton.IsEnabled>
                            <ToggleButton.Style>
                                <Style TargetType="{x:Type ToggleButton}">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                <Grid SnapsToDevicePixels="True">
                                                    <xctk:ButtonChrome x:Name="ToggleButtonChrome" Background="{DynamicResource ActiveBrush2}" CornerRadius="0" RenderMouseOver="{TemplateBinding IsMouseOver}" RenderPressed="{TemplateBinding IsPressed}" RenderChecked="{Binding IsOpen, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type xctk:TimePicker}}}" RenderEnabled="{Binding IsEnabled, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type xctk:TimePicker}}}">
                                                        <Grid>
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition Width="*"/>
                                                                <ColumnDefinition Width="Auto"/>
                                                            </Grid.ColumnDefinitions>
                                                            <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="Stretch" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Stretch"/>
                                                            <Grid x:Name="arrowGlyph" Grid.Column="1" IsHitTestVisible="False" Margin="5">
                                                                <Path x:Name="Arrow" Data="M0,0L3,0 4.5,1.5 6,0 9,0 4.5,4.5z" Fill="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" Height="5" Margin="0,1,0,0" Width="9"/>
                                                            </Grid>
                                                        </Grid>
                                                    </xctk:ButtonChrome>
                                                </Grid>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsEnabled" Value="False">
                                                        <Setter Property="Fill" TargetName="Arrow" Value="#FFAFAFAF"/>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </ToggleButton.Style>
                            <ToggleButton.Visibility>
                                <TemplateBinding Property="ShowDropDownButton">                                  
                                </TemplateBinding>
                            </ToggleButton.Visibility>
                        </ToggleButton>
                        <Popup x:Name="PART_Popup"  AllowsTransparency="True" IsOpen="{Binding IsChecked, ElementName=_timePickerToggleButton}" StaysOpen="False" ToolTip="">
                            <Popup.Resources>
                                <Style x:Key="{x:Type ToolTip}"  TargetType="{x:Type ToolTip}">
                                    <Style.Triggers>
                                        <Trigger Property="Content" Value="">
                                            <Setter Property="Visibility" Value="Collapsed"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Popup.Resources>
                            <Border BorderBrush="Orange" BorderThickness="1" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=root}">
                                <Border.Background>
                                    <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                        <GradientStop Color="Orange" Offset="0"/>
                                        <GradientStop Color="Green" Offset="1"/>
                                    </LinearGradientBrush>
                                </Border.Background>
                                <Grid>
                                    <ListBox x:Name="PART_TimeListItems" BorderThickness="0" DisplayMemberPath="Display">
                                        <ListBox.ItemContainerStyle>
                                            <Style TargetType="{x:Type ListBoxItem}">
                                                <Setter Property="Padding" Value="4"/>
                                                <Style.Triggers>
                                                    <MultiTrigger>
                                                        <MultiTrigger.Conditions>
                                                            <Condition Property="IsMouseOver" Value="True"/>
                                                            <Condition Property="IsSelected" Value="False"/>
                                                        </MultiTrigger.Conditions>
                                                        <Setter Property="Background" Value="Orange"/>
                                                        <Setter Property="BorderBrush" Value="Green"/>
                                                    </MultiTrigger>
                                                    <MultiTrigger>
                                                        <MultiTrigger.Conditions>
                                                            <Condition Property="IsMouseOver" Value="False"/>
                                                            <Condition Property="IsSelected" Value="True"/>
                                                        </MultiTrigger.Conditions>
                                                        <Setter Property="Background" Value="Orange"/>
                                                        <Setter Property="BorderBrush" Value="Green"/>
                                                    </MultiTrigger>
                                                    <MultiTrigger>
                                                        <MultiTrigger.Conditions>
                                                            <Condition Property="IsMouseOver" Value="True"/>
                                                            <Condition Property="IsSelected" Value="True"/>
                                                        </MultiTrigger.Conditions>
                                                        <Setter Property="Background" Value="Orange"/>
                                                        <Setter Property="BorderBrush" Value="Green"/>
                                                    </MultiTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </ListBox.ItemContainerStyle>
                                    </ListBox>
                                </Grid>
                            </Border>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" Value="{DynamicResource {ComponentResourceKey ResourceId=ControlMouseOverBorderKey, TypeInTargetAssembly={x:Type Themes:ResourceKeys}}}"/>
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsReadOnly, RelativeSource={RelativeSource Self}}" Value="False"/>
                                <Condition Binding="{Binding AllowTextInput, RelativeSource={RelativeSource Self}}" Value="False"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="IsReadOnly" TargetName="PART_TextBox" Value="True"/>
                        </MultiDataTrigger>
                        <DataTrigger Binding="{Binding IsReadOnly, RelativeSource={RelativeSource Self}}" Value="True">
                            <Setter Property="IsReadOnly" TargetName="PART_TextBox" Value="True"/>
                        </DataTrigger>
                        <Trigger Property="IsKeyboardFocusWithin" Value="True">
                            <Setter Property="BorderBrush" Value="{DynamicResource {ComponentResourceKey ResourceId=ControlSelectedBorderKey, TypeInTargetAssembly={x:Type Themes:ResourceKeys}}}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="FocusManager.FocusedElement" TargetName="PART_TextBox" Value="{Binding ElementName=PART_TextBox}"/>
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsOpen, RelativeSource={RelativeSource TemplatedParent}}" Value="True"/>
                                <Condition Value="DateTimePicker">
                                    <Condition.Binding>
                                        <Binding Path="TemplatedParent" RelativeSource="{RelativeSource Self}">
                                            <Binding.Converter>
                                                <xctk:ObjectTypeToNameConverter/>
                                            </Binding.Converter>
                                        </Binding>
                                    </Condition.Binding>
                                </Condition>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="IsHitTestVisible" TargetName="_timePickerToggleButton" Value="True"/>
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
<!--menu-->
    <Style x:Key="menuParentStyle" TargetType="MenuItem">
        <Setter Property="Background" Value="Black"/>
        <Setter Property="Foreground" Value="White"/>
    </Style>


    <SolidColorBrush x:Key="Menu.Static.Foreground" Color="White"/>
    <SolidColorBrush x:Key="Menu.Static.Background" Color="Black"/>
    <SolidColorBrush x:Key="Menu.Static.Border" Color="Transparent"/>
    <Style x:Key="MenuItemStyle1" TargetType="{x:Type MenuItem}">
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="Background" Value="Black"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Template" Value="{DynamicResource MenuItemControlTemplate1}"/>
        <Style.Triggers>
            <Trigger Property="Role" Value="TopLevelHeader">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="Foreground" Value="{StaticResource Menu.Static.Foreground}"/>
                <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=TopLevelHeaderTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}"/>
                <Setter Property="Padding" Value="6,0"/>
            </Trigger>
            <Trigger Property="Role" Value="TopLevelItem">
                <Setter Property="Background" Value="{StaticResource Menu.Static.Background}"/>
                <Setter Property="BorderBrush" Value="{StaticResource Menu.Static.Border}"/>
                <Setter Property="Foreground" Value="{StaticResource Menu.Static.Foreground}"/>
                <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=TopLevelItemTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}"/>
                <Setter Property="Padding" Value="6,0"/>
            </Trigger>
            <Trigger Property="Role" Value="SubmenuHeader">
                <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=SubmenuHeaderTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" Value="Orange" />
            </Trigger>
            <Trigger Property="IsKeyboardFocusWithin" Value="true">
                <Setter Property="Background" Value="Orange" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <ControlTemplate x:Key="MenuItemControlTemplate1" TargetType="{x:Type MenuItem}">
        <Border x:Name="templateRoot" BorderBrush="Aqua" BorderThickness="{TemplateBinding BorderThickness}" Background="#FF9DB91B" SnapsToDevicePixels="True">
            <Grid Margin="-1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition MinWidth="22" SharedSizeGroup="MenuItemIconColumnGroup" Width="Auto"/>
                    <ColumnDefinition Width="13"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="30"/>
                    <ColumnDefinition SharedSizeGroup="MenuItemIGTColumnGroup" Width="Auto"/>
                    <ColumnDefinition Width="20"/>
                </Grid.ColumnDefinitions>
                <ContentPresenter x:Name="Icon" Content="{TemplateBinding Icon}" ContentSource="Icon" HorizontalAlignment="Center" Height="16" Margin="3" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center" Width="16"/>
                <Border x:Name="GlyphPanel" BorderBrush="#FF2FB654" BorderThickness="1" Background="#3D26A0DA" ClipToBounds="False" HorizontalAlignment="Center" Height="22" Margin="-1,0,0,0" Visibility="Hidden" VerticalAlignment="Center" Width="22">
                    <Path x:Name="Glyph" Data="F1M10,1.2L4.7,9.1 4.5,9.1 0,5.2 1.3,3.5 4.3,6.1 8.3,0 10,1.2z" Fill="#FF212121" FlowDirection="LeftToRight" Height="11" Width="10"/>
                </Border>
                <ContentPresenter x:Name="menuHeaderContainer" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" Grid.Column="2" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentSource="Header" HorizontalAlignment="Left" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"/>
                <TextBlock x:Name="menuGestureText" Grid.Column="4" Margin="{TemplateBinding Padding}" Opacity="0.7" Text="{TemplateBinding InputGestureText}" VerticalAlignment="Center"/>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
                <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter Property="Background" TargetName="templateRoot" Value="orange"/>
                <!--<Setter Property="BorderBrush" TargetName="templateRoot" Value="Yellow"/>-->
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="#FF707070"/>
                <Setter Property="Fill" TargetName="Glyph" Value="#FF8A45B2"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsHighlighted" Value="True"/>
                    <Condition Property="IsEnabled" Value="False"/>
                </MultiTrigger.Conditions>
                <Setter Property="Background" TargetName="templateRoot" Value="#0A000000"/>
                <Setter Property="BorderBrush" TargetName="templateRoot" Value="#21B22B2B"/>
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="MenuItemControlTemplate2" TargetType="{x:Type MenuItem}">
        <Border x:Name="templateRoot" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
            <Grid VerticalAlignment="Center">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <ContentPresenter x:Name="Icon" Content="{TemplateBinding Icon}" ContentSource="Icon" HorizontalAlignment="Center" Height="16" Margin="3" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center" Width="16"/>
                <Path x:Name="GlyphPanel" Data="F1M10,1.2L4.7,9.1 4.5,9.1 0,5.2 1.3,3.5 4.3,6.1 8.3,0 10,1.2z" Fill="{TemplateBinding Foreground}" FlowDirection="LeftToRight" Margin="3" Visibility="Collapsed" VerticalAlignment="Center"/>
                <ContentPresenter ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" Grid.Column="1" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentSource="Header" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                <Popup x:Name="PART_Popup" AllowsTransparency="True" Focusable="False" IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" Placement="Bottom">
                    <Border x:Name="SubMenuBorder" BorderBrush="#FF999999" BorderThickness="1" Background="#FF7DC14D" Padding="2">
                        <ScrollViewer x:Name="SubMenuScrollViewer" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
                            <Grid RenderOptions.ClearTypeHint="Enabled">
                                <Canvas HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                    <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=SubMenuBorder}" Height="{Binding ActualHeight, ElementName=SubMenuBorder}" Width="{Binding ActualWidth, ElementName=SubMenuBorder}"/>
                                </Canvas>
                                <Rectangle Fill="#FFD7D7D7" HorizontalAlignment="Left" Margin="29,2,0,2" Width="1"/>
                                <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Cycle" Grid.IsSharedSizeScope="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" KeyboardNavigation.TabNavigation="Cycle"/>
                            </Grid>
                        </ScrollViewer>
                    </Border>
                </Popup>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsSuspendingPopupAnimation" Value="True">
                <Setter Property="PopupAnimation" TargetName="PART_Popup" Value="None"/>
            </Trigger>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
                <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter Property="Background" TargetName="templateRoot" Value="orange"/>
                <!--<Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF26A0DA"/>-->
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="#FF707070"/>
                <Setter Property="Fill" TargetName="GlyphPanel" Value="#FF707070"/>
            </Trigger>
            <Trigger Property="CanContentScroll" SourceName="SubMenuScrollViewer" Value="False">
                <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=SubMenuScrollViewer}"/>
                <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=SubMenuScrollViewer}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

</ResourceDictionary>